"use strict";(self.webpackChunk_ringcentral_integration_jsonschema_page=self.webpackChunk_ringcentral_integration_jsonschema_page||[]).push([[374],{"./src/__stories__/BasicForms.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ArrayFields:function(){return ArrayFields},ConditionalFields:function(){return ConditionalFields},ContactForm:function(){return ContactForm},CustomValidation:function(){return CustomValidation},__namedExportsOrder:function(){return __namedExportsOrder}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@ringcentral/juno/es6/foundation/theme/ThemeProvider.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.tsx");const meta={title:"JSONSchemaPage/Complete Form Examples",component:_index__WEBPACK_IMPORTED_MODULE_2__.v,parameters:{layout:"fullscreen",docs:{description:{component:"Complete form examples showing real-world use cases - Contact forms, Multi-step workflows, Validation patterns, and advanced form features"}}},tags:["autodocs"],argTypes:{schema:{description:"JSON Schema that defines the form structure - Edit to see live updates!",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},uiSchema:{description:"UI Schema that defines how the form should be rendered - Customize appearance and behavior",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},formData:{description:"Current form data values - Set initial form values",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},hiddenSubmitButton:{description:"Whether to hide the default submit button",control:{type:"boolean"}},onFormDataChange:{action:"formDataChanged",description:"Called when form data changes",table:{type:{summary:"function"}}},onSubmit:{action:"formSubmitted",description:"Called when form is submitted",table:{type:{summary:"function"}}},onButtonClick:{action:"buttonClicked",description:"Called when custom buttons are clicked",table:{type:{summary:"function"}}}}};__webpack_exports__.default=meta;const ContactForm={args:{schema:{type:"object",required:["firstName","lastName","email"],properties:{firstName:{type:"string",title:"First Name",description:"Enter your first name"},lastName:{type:"string",title:"Last Name",description:"Enter your last name"},email:{type:"string",format:"email",title:"Email Address",description:"Enter a valid email address"},phone:{type:"string",title:"Phone Number",description:"Enter your phone number (optional)"},age:{type:"integer",title:"Age",minimum:0,maximum:120}}},uiSchema:{firstName:{"ui:placeholder":"John"},lastName:{"ui:placeholder":"Doe"},email:{"ui:placeholder":"john.doe@example.com"},phone:{"ui:placeholder":"+1 (555) 123-4567"},age:{"ui:widget":"range"}},formData:{firstName:"John",lastName:"Doe",email:"john.doe@example.com"},hiddenSubmitButton:!1},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:data=>{setFormData(data),args.onFormDataChange?.(data)},onSubmit:data=>{console.log("Form submitted:",data.formData),args.onSubmit?.(data),alert("Form submitted! Check console and Actions panel.")},onButtonClick:(name,value)=>{console.log("Button clicked:",name,value),args.onButtonClick?.(name,value)}})})})})]})}},ConditionalFields={args:{schema:{type:"object",required:["name","userType"],properties:{name:{type:"string",title:"Full Name"},userType:{type:"string",title:"User Type",enum:["individual","business"],enumNames:["Individual","Business"]},email:{type:"string",format:"email",title:"Email Address"}},dependencies:{userType:{oneOf:[{properties:{userType:{enum:["individual"]},dateOfBirth:{type:"string",format:"date",title:"Date of Birth"},personalId:{type:"string",title:"Personal ID"}},required:["dateOfBirth"]},{properties:{userType:{enum:["business"]},companyName:{type:"string",title:"Company Name"},taxId:{type:"string",title:"Tax ID"},numberOfEmployees:{type:"integer",title:"Number of Employees",minimum:1}},required:["companyName","taxId"]}]}}},formData:{userType:"individual"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:data=>{setFormData(data),args.onFormDataChange?.(data)},onSubmit:data=>{console.log("Registration data:",data.formData),args.onSubmit?.(data),alert("Registration submitted! Check console and Actions panel.")},onButtonClick:(name,value)=>{console.log("Button clicked:",name,value),args.onButtonClick?.(name,value)}})})})})]})}},ArrayFields={args:{schema:{type:"object",properties:{projectName:{type:"string",title:"Project Name"},teamMembers:{type:"array",title:"Team Members",description:"Add team members to the project",items:{type:"object",properties:{name:{type:"string",title:"Name"},role:{type:"string",title:"Role",enum:["developer","designer","manager","tester"],enumNames:["Developer","Designer","Manager","Tester"]},email:{type:"string",format:"email",title:"Email"},isLead:{type:"boolean",title:"Team Lead",default:!1}},required:["name","role","email"]}},tags:{type:"array",title:"Project Tags",description:"Add relevant tags for the project",items:{type:"string"},uniqueItems:!0}},required:["projectName"]},formData:{projectName:"Awesome Project",teamMembers:[{name:"John Doe",role:"developer",email:"john@example.com",isLead:!0}],tags:["react","typescript"]}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:data=>{setFormData(data),args.onFormDataChange?.(data)},onSubmit:data=>{console.log("Team data:",data.formData),args.onSubmit?.(data),alert("Team data submitted! Check console and Actions panel.")},onButtonClick:(name,value)=>{console.log("Button clicked:",name,value),args.onButtonClick?.(name,value)}})})})})]})}},CustomValidation={args:{schema:{type:"object",properties:{username:{type:"string",title:"Username",minLength:3,maxLength:20,pattern:"^[a-zA-Z0-9_]+$",description:"Username must be 3-20 characters, alphanumeric and underscores only"},password:{type:"string",title:"Password",minLength:8,description:"Password must be at least 8 characters long"},confirmPassword:{type:"string",title:"Confirm Password",description:"Re-enter your password"},agreeToTerms:{type:"boolean",title:"I agree to the terms and conditions",const:!0}},required:["username","password","confirmPassword","agreeToTerms"]},uiSchema:{password:{"ui:widget":"password"},confirmPassword:{"ui:widget":"password"}}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:data=>{setFormData(data),args.onFormDataChange?.(data)},onSubmit:data=>{data.formData.password===data.formData.confirmPassword?(console.log("Account created:",data.formData),args.onSubmit?.(data),alert("Account created successfully! Check console and Actions panel.")):alert("Passwords do not match!")},onButtonClick:(name,value)=>{console.log("Button clicked:",name,value),args.onButtonClick?.(name,value)}})})})})]})}},__namedExportsOrder=["ContactForm","ConditionalFields","ArrayFields","CustomValidation"];ContactForm.parameters={...ContactForm.parameters,docs:{...ContactForm.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      required: ['firstName', 'lastName', 'email'],\n      properties: {\n        firstName: {\n          type: 'string',\n          title: 'First Name',\n          description: 'Enter your first name'\n        },\n        lastName: {\n          type: 'string',\n          title: 'Last Name',\n          description: 'Enter your last name'\n        },\n        email: {\n          type: 'string',\n          format: 'email',\n          title: 'Email Address',\n          description: 'Enter a valid email address'\n        },\n        phone: {\n          type: 'string',\n          title: 'Phone Number',\n          description: 'Enter your phone number (optional)'\n        },\n        age: {\n          type: 'integer',\n          title: 'Age',\n          minimum: 0,\n          maximum: 120\n        }\n      }\n    },\n    uiSchema: {\n      firstName: {\n        'ui:placeholder': 'John'\n      },\n      lastName: {\n        'ui:placeholder': 'Doe'\n      },\n      email: {\n        'ui:placeholder': 'john.doe@example.com'\n      },\n      phone: {\n        'ui:placeholder': '+1 (555) 123-4567'\n      },\n      age: {\n        'ui:widget': 'range'\n      }\n    },\n    formData: {\n      firstName: 'John',\n      lastName: 'Doe',\n      email: 'john.doe@example.com'\n    },\n    hiddenSubmitButton: false\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>📋 JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>📊 Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={data => {\n              setFormData(data);\n              args.onFormDataChange?.(data);\n            }} onSubmit={data => {\n              console.log('Form submitted:', data.formData);\n              args.onSubmit?.(data);\n              alert('Form submitted! Check console and Actions panel.');\n            }} onButtonClick={(name, value) => {\n              console.log('Button clicked:', name, value);\n              args.onButtonClick?.(name, value);\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...ContactForm.parameters?.docs?.source}}},ConditionalFields.parameters={...ConditionalFields.parameters,docs:{...ConditionalFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      required: ['name', 'userType'],\n      properties: {\n        name: {\n          type: 'string',\n          title: 'Full Name'\n        },\n        userType: {\n          type: 'string',\n          title: 'User Type',\n          enum: ['individual', 'business'],\n          enumNames: ['Individual', 'Business']\n        },\n        email: {\n          type: 'string',\n          format: 'email',\n          title: 'Email Address'\n        }\n      },\n      dependencies: {\n        userType: {\n          oneOf: [{\n            properties: {\n              userType: {\n                enum: ['individual']\n              },\n              dateOfBirth: {\n                type: 'string',\n                format: 'date',\n                title: 'Date of Birth'\n              },\n              personalId: {\n                type: 'string',\n                title: 'Personal ID'\n              }\n            },\n            required: ['dateOfBirth']\n          }, {\n            properties: {\n              userType: {\n                enum: ['business']\n              },\n              companyName: {\n                type: 'string',\n                title: 'Company Name'\n              },\n              taxId: {\n                type: 'string',\n                title: 'Tax ID'\n              },\n              numberOfEmployees: {\n                type: 'integer',\n                title: 'Number of Employees',\n                minimum: 1\n              }\n            },\n            required: ['companyName', 'taxId']\n          }]\n        }\n      }\n    },\n    formData: {\n      userType: 'individual'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>📋 JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>📊 Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={data => {\n              setFormData(data);\n              args.onFormDataChange?.(data);\n            }} onSubmit={data => {\n              console.log('Registration data:', data.formData);\n              args.onSubmit?.(data);\n              alert('Registration submitted! Check console and Actions panel.');\n            }} onButtonClick={(name, value) => {\n              console.log('Button clicked:', name, value);\n              args.onButtonClick?.(name, value);\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...ConditionalFields.parameters?.docs?.source}}},ArrayFields.parameters={...ArrayFields.parameters,docs:{...ArrayFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        projectName: {\n          type: 'string',\n          title: 'Project Name'\n        },\n        teamMembers: {\n          type: 'array',\n          title: 'Team Members',\n          description: 'Add team members to the project',\n          items: {\n            type: 'object',\n            properties: {\n              name: {\n                type: 'string',\n                title: 'Name'\n              },\n              role: {\n                type: 'string',\n                title: 'Role',\n                enum: ['developer', 'designer', 'manager', 'tester'],\n                enumNames: ['Developer', 'Designer', 'Manager', 'Tester']\n              },\n              email: {\n                type: 'string',\n                format: 'email',\n                title: 'Email'\n              },\n              isLead: {\n                type: 'boolean',\n                title: 'Team Lead',\n                default: false\n              }\n            },\n            required: ['name', 'role', 'email']\n          }\n        },\n        tags: {\n          type: 'array',\n          title: 'Project Tags',\n          description: 'Add relevant tags for the project',\n          items: {\n            type: 'string'\n          },\n          uniqueItems: true\n        }\n      },\n      required: ['projectName']\n    },\n    formData: {\n      projectName: 'Awesome Project',\n      teamMembers: [{\n        name: 'John Doe',\n        role: 'developer',\n        email: 'john@example.com',\n        isLead: true\n      }],\n      tags: ['react', 'typescript']\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>📋 JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>📊 Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={data => {\n              setFormData(data);\n              args.onFormDataChange?.(data);\n            }} onSubmit={data => {\n              console.log('Team data:', data.formData);\n              args.onSubmit?.(data);\n              alert('Team data submitted! Check console and Actions panel.');\n            }} onButtonClick={(name, value) => {\n              console.log('Button clicked:', name, value);\n              args.onButtonClick?.(name, value);\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...ArrayFields.parameters?.docs?.source}}},CustomValidation.parameters={...CustomValidation.parameters,docs:{...CustomValidation.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        username: {\n          type: 'string',\n          title: 'Username',\n          minLength: 3,\n          maxLength: 20,\n          pattern: '^[a-zA-Z0-9_]+$',\n          description: 'Username must be 3-20 characters, alphanumeric and underscores only'\n        },\n        password: {\n          type: 'string',\n          title: 'Password',\n          minLength: 8,\n          description: 'Password must be at least 8 characters long'\n        },\n        confirmPassword: {\n          type: 'string',\n          title: 'Confirm Password',\n          description: 'Re-enter your password'\n        },\n        agreeToTerms: {\n          type: 'boolean',\n          title: 'I agree to the terms and conditions',\n          const: true\n        }\n      },\n      required: ['username', 'password', 'confirmPassword', 'agreeToTerms']\n    },\n    uiSchema: {\n      password: {\n        'ui:widget': 'password'\n      },\n      confirmPassword: {\n        'ui:widget': 'password'\n      }\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>📋 JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>📊 Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={data => {\n              setFormData(data);\n              args.onFormDataChange?.(data);\n            }} onSubmit={data => {\n              // Custom validation for password confirmation\n              if (data.formData.password !== data.formData.confirmPassword) {\n                alert('Passwords do not match!');\n                return;\n              }\n              console.log('Account created:', data.formData);\n              args.onSubmit?.(data);\n              alert('Account created successfully! Check console and Actions panel.');\n            }} onButtonClick={(name, value) => {\n              console.log('Button clicked:', name, value);\n              args.onButtonClick?.(name, value);\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...CustomValidation.parameters?.docs?.source}}}},"./src/__stories__/CustomFields.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AlertFields:function(){return AlertFields},LinkFields:function(){return LinkFields},TypographyFields:function(){return TypographyFields},__namedExportsOrder:function(){return __namedExportsOrder}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@ringcentral/juno/es6/foundation/theme/ThemeProvider.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.tsx");const StoryLayout=({args:args,children:children,resultComponent:resultComponent})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),resultComponent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:resultComponent})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:children})})})]}),meta={title:"JSONSchemaPage/Display Components",component:_index__WEBPACK_IMPORTED_MODULE_2__.v,parameters:{layout:"fullscreen",docs:{description:{component:"Components for displaying content and information - Typography, Alerts, Links, and other non-input elements"}}},tags:["autodocs"],argTypes:{schema:{description:"JSON Schema that defines the form structure - Edit to see live updates!",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},uiSchema:{description:"UI Schema that defines how the form should be rendered - Customize appearance and behavior",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},formData:{description:"Current form data values - Set initial form values",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},onFormDataChange:{action:"formDataChanged",description:"Called when form data changes",table:{type:{summary:"function"}}},onSubmit:{action:"formSubmitted",description:"Called when form is submitted",table:{type:{summary:"function"}}},onButtonClick:{action:"buttonClicked",description:"Called when custom buttons are clicked",table:{type:{summary:"function"}}}}};__webpack_exports__.default=meta;const TypographyFields={args:{schema:{type:"object",properties:{heading:{type:"string",title:"Main Heading",description:"This is a main heading using h4 variant"},subheading:{type:"string",title:"Subheading",description:"This is a subheading using h6 variant"},body1Text:{type:"string",title:"Body Text",description:"This is regular body text using the default body1 variant. It provides good readability for longer content."},body2Text:{type:"string",title:"Small Body Text",description:"This is smaller body text using body2 variant. Perfect for secondary information."},caption:{type:"string",title:"Caption",description:"This is caption text, typically used for image captions or footnotes."},bulletItem1:{type:"string",title:"Bullet Item 1",description:"First bulleted list item"},bulletItem2:{type:"string",title:"Bullet Item 2",description:"Second bulleted list item"},bulletItem3:{type:"string",title:"Bullet Item 3",description:"Third bulleted list item"}}},uiSchema:{heading:{"ui:field":"typography","ui:variant":"h4"},subheading:{"ui:field":"typography","ui:variant":"h6"},body1Text:{"ui:field":"typography","ui:variant":"body1"},body2Text:{"ui:field":"typography","ui:variant":"body2"},caption:{"ui:field":"typography","ui:variant":"caption1"},bulletItem1:{"ui:field":"typography","ui:bulletedList":!0},bulletItem2:{"ui:field":"typography","ui:bulletedList":!0},bulletItem3:{"ui:field":"typography","ui:bulletedList":!0}},formData:{}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📝 Typography Variants"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Heading: h4 variant"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Subheading: h6 variant"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Body1: Default body text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Body2: Smaller body text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Caption: caption1 variant"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Bullets: List items with bullets"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"20px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 15px 0",color:"#333"},children:"Typography Examples"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{background:"#f8f9fa",padding:"15px",borderRadius:"8px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{style:{margin:0,paddingLeft:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})})]})})}},AlertFields={args:{schema:{type:"object",properties:{infoAlert:{type:"string",title:"Information Alert",description:"This is an informational alert. It provides helpful information to users."},successAlert:{type:"string",title:"Success Alert",description:"This is a success alert. It indicates that an operation completed successfully."},warningAlert:{type:"string",title:"Warning Alert",description:"This is a warning alert. It warns users about potential issues or important information."},errorAlert:{type:"string",title:"Error Alert",description:"This is an error alert. It indicates that something went wrong and requires attention."},alertWithLink:{type:"string",title:"Alert with Link",description:"This is an alert with a link and bold text. It provides **helpful information** to users. [Learn more](https://ringcentral.github.io/ringcentral-embeddable/jsonschema-page)."}}},uiSchema:{infoAlert:{"ui:field":"admonition","ui:severity":"info"},successAlert:{"ui:field":"admonition","ui:severity":"success"},warningAlert:{"ui:field":"admonition","ui:severity":"warning"},errorAlert:{"ui:field":"admonition","ui:severity":"error"},alertWithLink:{"ui:field":"admonition","ui:severity":"warning"}},formData:{}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"🚨 Alert Types"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Info: Blue alert for general information"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Success: Green alert for successful operations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Warning: Orange alert for warnings"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Error: Red alert for errors"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},LinkFields={args:{schema:{type:"object",properties:{externalLink:{type:"string",title:"External Link",description:"Visit RingCentral Embeddable Documentation"},coloredLink:{type:"string",title:"Colored Link",description:"Link with custom color styling"},underlinedLink:{type:"string",title:"Underlined Link",description:"Link with underline styling"},buttonLink:{type:"string",title:"Button Link",description:"Link that acts like a button (no href)"},listLinkItem1:{type:"string",title:"List Link Item 1",description:"GitHub Repository"},listLinkItem2:{type:"string",title:"List Link Item 2",description:"API Documentation"},listLinkItem3:{type:"string",title:"List Link Item 3",description:"Developer Guide"}}},uiSchema:{externalLink:{"ui:field":"link","ui:variant":"body1","ui:href":"https://apps.ringcentral.com/integration/ringcentral-embeddable/latest/"},coloredLink:{"ui:field":"link","ui:variant":"body1","ui:color":"avatar.brass","ui:href":"https://developers.ringcentral.com/"},underlinedLink:{"ui:field":"link","ui:variant":"body1","ui:underline":"always","ui:href":"https://github.com/ringcentral/ringcentral-embeddable"},buttonLink:{"ui:field":"link","ui:variant":"body1","ui:color":"action.primary","ui:underline":!1},listLinkItem1:{"ui:field":"link","ui:bulletedList":!0,"ui:href":"https://github.com/ringcentral/ringcentral-embeddable"},listLinkItem2:{"ui:field":"link","ui:bulletedList":!0,"ui:href":"https://developers.ringcentral.com/api-reference"},listLinkItem3:{"ui:field":"link","ui:bulletedList":!0,"ui:href":"https://developers.ringcentral.com/guide/embeddable"}},formData:{}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[linkClicks,setLinkClicks]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"🔗 Link Interactions"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"External links: Open in new tab"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Button link clicks: ",linkClicks.buttonLink||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"List links: Organized as bulleted list"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 15px 0",color:"#333"},children:"Link Examples"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{marginBottom:"20px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData,onButtonClick:buttonId=>{"buttonLink"===buttonId&&setLinkClicks(prev=>({...prev,[buttonId]:(prev[buttonId]||0)+1}))}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{background:"#f8f9fa",padding:"15px",borderRadius:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{style:{margin:"0 0 10px 0",color:"#666"},children:"Bulleted Link List:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{style:{margin:0,paddingLeft:"20px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{style:{marginBottom:"8px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{schema:{type:"object",properties:{listLinkItem1:args.schema.properties.listLinkItem1}},uiSchema:{listLinkItem1:args.uiSchema.listLinkItem1},formData:{},onFormDataChange:()=>{},onButtonClick:()=>{},onSubmit:()=>{}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{style:{marginBottom:"8px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{schema:{type:"object",properties:{listLinkItem2:args.schema.properties.listLinkItem2}},uiSchema:{listLinkItem2:args.uiSchema.listLinkItem2},formData:{},onFormDataChange:()=>{},onButtonClick:()=>{},onSubmit:()=>{}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{style:{marginBottom:"8px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{schema:{type:"object",properties:{listLinkItem3:args.schema.properties.listLinkItem3}},uiSchema:{listLinkItem3:args.uiSchema.listLinkItem3},formData:{},onFormDataChange:()=>{},onButtonClick:()=>{},onSubmit:()=>{}})})]})]})]})})}},__namedExportsOrder=["TypographyFields","AlertFields","LinkFields"];TypographyFields.parameters={...TypographyFields.parameters,docs:{...TypographyFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        heading: {\n          type: 'string',\n          title: 'Main Heading',\n          description: 'This is a main heading using h4 variant'\n        },\n        subheading: {\n          type: 'string',\n          title: 'Subheading',\n          description: 'This is a subheading using h6 variant'\n        },\n        body1Text: {\n          type: 'string',\n          title: 'Body Text',\n          description: 'This is regular body text using the default body1 variant. It provides good readability for longer content.'\n        },\n        body2Text: {\n          type: 'string',\n          title: 'Small Body Text',\n          description: 'This is smaller body text using body2 variant. Perfect for secondary information.'\n        },\n        caption: {\n          type: 'string',\n          title: 'Caption',\n          description: 'This is caption text, typically used for image captions or footnotes.'\n        },\n        bulletItem1: {\n          type: 'string',\n          title: 'Bullet Item 1',\n          description: 'First bulleted list item'\n        },\n        bulletItem2: {\n          type: 'string',\n          title: 'Bullet Item 2',\n          description: 'Second bulleted list item'\n        },\n        bulletItem3: {\n          type: 'string',\n          title: 'Bullet Item 3',\n          description: 'Third bulleted list item'\n        }\n      }\n    },\n    uiSchema: {\n      heading: {\n        'ui:field': 'typography',\n        'ui:variant': 'h4'\n      },\n      subheading: {\n        'ui:field': 'typography',\n        'ui:variant': 'h6'\n      },\n      body1Text: {\n        'ui:field': 'typography',\n        'ui:variant': 'body1'\n      },\n      body2Text: {\n        'ui:field': 'typography',\n        'ui:variant': 'body2'\n      },\n      caption: {\n        'ui:field': 'typography',\n        'ui:variant': 'caption1'\n      },\n      bulletItem1: {\n        'ui:field': 'typography',\n        'ui:bulletedList': true\n      },\n      bulletItem2: {\n        'ui:field': 'typography',\n        'ui:bulletedList': true\n      },\n      bulletItem3: {\n        'ui:field': 'typography',\n        'ui:bulletedList': true\n      }\n    },\n    formData: {}\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📝 Typography Variants</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Heading: h4 variant</p>\n              <p>Subheading: h6 variant</p>\n              <p>Body1: Default body text</p>\n              <p>Body2: Smaller body text</p>\n              <p>Caption: caption1 variant</p>\n              <p>Bullets: List items with bullets</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <div style={{\n        marginBottom: '20px'\n      }}>\n          <h4 style={{\n          margin: '0 0 15px 0',\n          color: '#333'\n        }}>Typography Examples</h4>\n          <div style={{\n          background: '#f8f9fa',\n          padding: '15px',\n          borderRadius: '8px'\n        }}>\n            <ul style={{\n            margin: 0,\n            paddingLeft: '20px'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n            </ul>\n          </div>\n        </div>\n      </StoryLayout>;\n  }\n}",...TypographyFields.parameters?.docs?.source}}},AlertFields.parameters={...AlertFields.parameters,docs:{...AlertFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        infoAlert: {\n          type: 'string',\n          title: 'Information Alert',\n          description: 'This is an informational alert. It provides helpful information to users.'\n        },\n        successAlert: {\n          type: 'string',\n          title: 'Success Alert',\n          description: 'This is a success alert. It indicates that an operation completed successfully.'\n        },\n        warningAlert: {\n          type: 'string',\n          title: 'Warning Alert',\n          description: 'This is a warning alert. It warns users about potential issues or important information.'\n        },\n        errorAlert: {\n          type: 'string',\n          title: 'Error Alert',\n          description: 'This is an error alert. It indicates that something went wrong and requires attention.'\n        },\n        alertWithLink: {\n          type: 'string',\n          title: 'Alert with Link',\n          description: 'This is an alert with a link and bold text. It provides **helpful information** to users. [Learn more](https://ringcentral.github.io/ringcentral-embeddable/jsonschema-page).'\n        }\n      }\n    },\n    uiSchema: {\n      infoAlert: {\n        'ui:field': 'admonition',\n        'ui:severity': 'info'\n      },\n      successAlert: {\n        'ui:field': 'admonition',\n        'ui:severity': 'success'\n      },\n      warningAlert: {\n        'ui:field': 'admonition',\n        'ui:severity': 'warning'\n      },\n      errorAlert: {\n        'ui:field': 'admonition',\n        'ui:severity': 'error'\n      },\n      alertWithLink: {\n        'ui:field': 'admonition',\n        'ui:severity': 'warning'\n      }\n    },\n    formData: {}\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>🚨 Alert Types</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Info: Blue alert for general information</p>\n              <p>Success: Green alert for successful operations</p>\n              <p>Warning: Orange alert for warnings</p>\n              <p>Error: Red alert for errors</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...AlertFields.parameters?.docs?.source}}},LinkFields.parameters={...LinkFields.parameters,docs:{...LinkFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        externalLink: {\n          type: 'string',\n          title: 'External Link',\n          description: 'Visit RingCentral Embeddable Documentation'\n        },\n        coloredLink: {\n          type: 'string',\n          title: 'Colored Link',\n          description: 'Link with custom color styling'\n        },\n        underlinedLink: {\n          type: 'string',\n          title: 'Underlined Link',\n          description: 'Link with underline styling'\n        },\n        buttonLink: {\n          type: 'string',\n          title: 'Button Link',\n          description: 'Link that acts like a button (no href)'\n        },\n        listLinkItem1: {\n          type: 'string',\n          title: 'List Link Item 1',\n          description: 'GitHub Repository'\n        },\n        listLinkItem2: {\n          type: 'string',\n          title: 'List Link Item 2',\n          description: 'API Documentation'\n        },\n        listLinkItem3: {\n          type: 'string',\n          title: 'List Link Item 3',\n          description: 'Developer Guide'\n        }\n      }\n    },\n    uiSchema: {\n      externalLink: {\n        'ui:field': 'link',\n        'ui:variant': 'body1',\n        'ui:href': 'https://apps.ringcentral.com/integration/ringcentral-embeddable/latest/'\n      },\n      coloredLink: {\n        'ui:field': 'link',\n        'ui:variant': 'body1',\n        'ui:color': 'avatar.brass',\n        'ui:href': 'https://developers.ringcentral.com/'\n      },\n      underlinedLink: {\n        'ui:field': 'link',\n        'ui:variant': 'body1',\n        'ui:underline': 'always',\n        'ui:href': 'https://github.com/ringcentral/ringcentral-embeddable'\n      },\n      buttonLink: {\n        'ui:field': 'link',\n        'ui:variant': 'body1',\n        'ui:color': 'action.primary',\n        'ui:underline': false\n      },\n      listLinkItem1: {\n        'ui:field': 'link',\n        'ui:bulletedList': true,\n        'ui:href': 'https://github.com/ringcentral/ringcentral-embeddable'\n      },\n      listLinkItem2: {\n        'ui:field': 'link',\n        'ui:bulletedList': true,\n        'ui:href': 'https://developers.ringcentral.com/api-reference'\n      },\n      listLinkItem3: {\n        'ui:field': 'link',\n        'ui:bulletedList': true,\n        'ui:href': 'https://developers.ringcentral.com/guide/embeddable'\n      }\n    },\n    formData: {}\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [linkClicks, setLinkClicks] = useState<{\n      buttonLink?: number;\n    }>({});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>🔗 Link Interactions</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>External links: Open in new tab</p>\n              <p>Button link clicks: {linkClicks.buttonLink || 0}</p>\n              <p>List links: Organized as bulleted list</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <div>\n          <h4 style={{\n          margin: '0 0 15px 0',\n          color: '#333'\n        }}>Link Examples</h4>\n          <div style={{\n          marginBottom: '20px'\n        }}>\n            <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} onButtonClick={(buttonId: string) => {\n            if (buttonId === 'buttonLink') {\n              setLinkClicks(prev => ({\n                ...prev,\n                [buttonId]: (prev[buttonId as keyof typeof prev] || 0) + 1\n              }));\n            }\n          }} />\n          </div>\n          <div style={{\n          background: '#f8f9fa',\n          padding: '15px',\n          borderRadius: '8px'\n        }}>\n            <h5 style={{\n            margin: '0 0 10px 0',\n            color: '#666'\n          }}>Bulleted Link List:</h5>\n            <ul style={{\n            margin: 0,\n            paddingLeft: '20px'\n          }}>\n              <li style={{\n              marginBottom: '8px'\n            }}>\n                <JSONSchemaPage schema={{\n                type: 'object',\n                properties: {\n                  listLinkItem1: (args.schema.properties as any).listLinkItem1\n                }\n              }} uiSchema={{\n                listLinkItem1: (args.uiSchema as any).listLinkItem1\n              }} formData={{}} onFormDataChange={() => {}} onButtonClick={() => {}} onSubmit={() => {}} />\n              </li>\n              <li style={{\n              marginBottom: '8px'\n            }}>\n                <JSONSchemaPage schema={{\n                type: 'object',\n                properties: {\n                  listLinkItem2: (args.schema.properties as any).listLinkItem2\n                }\n              }} uiSchema={{\n                listLinkItem2: (args.uiSchema as any).listLinkItem2\n              }} formData={{}} onFormDataChange={() => {}} onButtonClick={() => {}} onSubmit={() => {}} />\n              </li>\n              <li style={{\n              marginBottom: '8px'\n            }}>\n                <JSONSchemaPage schema={{\n                type: 'object',\n                properties: {\n                  listLinkItem3: (args.schema.properties as any).listLinkItem3\n                }\n              }} uiSchema={{\n                listLinkItem3: (args.uiSchema as any).listLinkItem3\n              }} formData={{}} onFormDataChange={() => {}} onButtonClick={() => {}} onSubmit={() => {}} />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </StoryLayout>;\n  }\n}",...LinkFields.parameters?.docs?.source}}}},"./src/__stories__/InteractiveComponents.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicListField:function(){return BasicListField},ButtonFields:function(){return ButtonFields},CardListField:function(){return CardListField},ListWithMetaField:function(){return ListWithMetaField},MetricCardsWidget:function(){return MetricCardsWidget},NavigationListField:function(){return NavigationListField},SearchAndFilterFields:function(){return SearchAndFilterFields},__namedExportsOrder:function(){return __namedExportsOrder}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@ringcentral/juno/es6/foundation/theme/ThemeProvider.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.tsx");const StoryLayout=({args:args,children:children,resultComponent:resultComponent})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),resultComponent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:resultComponent})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:children})})})]}),meta={title:"JSONSchemaPage/Interactive Components",component:_index__WEBPACK_IMPORTED_MODULE_2__.v,parameters:{layout:"fullscreen",docs:{description:{component:"Interactive components for user actions - Buttons, Selection Lists, Search fields, and other clickable elements"}}},tags:["autodocs"],argTypes:{schema:{description:"JSON Schema that defines the form structure - Edit to see live updates!",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},uiSchema:{description:"UI Schema that defines how the form should be rendered - Customize appearance and behavior",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},formData:{description:"Current form data values - Set initial form values",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},onFormDataChange:{action:"formDataChanged",description:"Called when form data changes",table:{type:{summary:"function"}}},onSubmit:{action:"formSubmitted",description:"Called when form is submitted",table:{type:{summary:"function"}}},onButtonClick:{action:"buttonClicked",description:"Called when custom buttons are clicked",table:{type:{summary:"function"}}}}};__webpack_exports__.default=meta;const ButtonFields={args:{schema:{type:"object",properties:{primaryButton:{type:"string",title:"Primary Action",description:"Standard primary button"},secondaryButton:{type:"string",title:"Secondary Action",description:"Outlined secondary button"},dangerButton:{type:"string",title:"Delete Item",description:"Danger action button"},textButton:{type:"string",title:"Text Button",description:"Simple text button"},fullWidthButton:{type:"string",title:"Full Width Button",description:"Button that spans full width"},plainButton:{type:"string",title:"Plain Button",description:"Plain style button"}}},uiSchema:{primaryButton:{"ui:field":"button","ui:variant":"contained","ui:color":"primary"},secondaryButton:{"ui:field":"button","ui:variant":"outlined","ui:color":"secondary"},dangerButton:{"ui:field":"button","ui:variant":"contained","ui:color":"danger.b03"},textButton:{"ui:field":"button","ui:variant":"text"},fullWidthButton:{"ui:field":"button","ui:variant":"contained","ui:color":"success","ui:fullWidth":!0},plainButton:{"ui:field":"button","ui:variant":"plain"}},formData:{}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[buttonClicks,setButtonClicks]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Button Interactions"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Primary clicks: ",buttonClicks.primaryButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Secondary clicks: ",buttonClicks.secondaryButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Danger clicks: ",buttonClicks.dangerButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Text clicks: ",buttonClicks.textButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Full Width clicks: ",buttonClicks.fullWidthButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Plain clicks: ",buttonClicks.plainButton||0]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:data=>{setFormData(data),args.onFormDataChange?.(data)},onSubmit:data=>{console.log("Button form submitted:",data.formData),args.onSubmit?.(data),alert("Form submitted! Check console and Actions panel.")},onButtonClick:(buttonId,value)=>{setButtonClicks(prev=>({...prev,[buttonId]:(prev[buttonId]||0)+1})),console.log("Button clicked:",buttonId,value),args.onButtonClick?.(buttonId,value)}})})}},SearchAndFilterFields={args:{schema:{type:"object",properties:{globalSearch:{type:"string",title:"Global Search",description:"Search across all data"},filterSearch:{type:"string",title:"Filter Search",description:"Filter with autocomplete"},categoryFilter:{type:"string",title:"Category Filter",description:"Filter by category"},advancedSearch:{type:"string",title:"Advanced Search",description:"Search with advanced options"},searchResults:{type:"null",title:"Search Results",description:"Display search results dynamically"},resultCount:{type:"integer",title:"Result Count",description:"Number of results found",default:0}}},uiSchema:{globalSearch:{"ui:field":"search","ui:options":{placeholder:"Search everything...",showSearchIcon:!0,onSearch:(query,formData,setFormData)=>{const mockResults=query?Math.floor(50*Math.random())+1:0;setFormData(prev=>({...prev,resultCount:mockResults})),console.log(`Global search for: ${query}, found ${mockResults} results`)}}},filterSearch:{"ui:field":"search","ui:options":{placeholder:"Type to filter...",suggestions:["JavaScript","TypeScript","React","Vue","Angular","Node.js","Python","Java","C++","Go"],onSearch:query=>{console.log("Filter search:",query)}}},categoryFilter:{"ui:field":"search","ui:options":{placeholder:"Select category...",suggestions:["Technology","Design","Marketing","Sales","Support","Development","Testing","DevOps","Management"],variant:"filter",onSearch:query=>{console.log("Category filter:",query)}}},advancedSearch:{"ui:field":"search","ui:options":{placeholder:"Advanced search with operators...",helpText:"Use quotes for exact match, + for required terms, - for excluded terms",onSearch:query=>{console.log("Advanced search:",query),alert(`Advanced search: ${query}`)}}},searchResults:{"ui:field":"typography","ui:options":{variant:"body1",text:formData=>formData.resultCount>0?`Found ${formData.resultCount} results for your search.`:"No search performed yet.",style:{fontStyle:"italic",color:"#666",padding:"10px",backgroundColor:"#f0f0f0",borderRadius:"4px"}}}},formData:{globalSearch:"",filterSearch:"",categoryFilter:"",advancedSearch:"",resultCount:0}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[searchHistory,setSearchHistory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),enhancedArgs={...args,uiSchema:{...args.uiSchema,globalSearch:{...args.uiSchema.globalSearch,"ui:options":{...args.uiSchema.globalSearch["ui:options"],onSearch:(query,currentFormData,setCurrentFormData)=>{const mockResults=query?Math.floor(50*Math.random())+1:0;setFormData(prev=>({...prev,resultCount:mockResults})),setSearchHistory(prev=>({...prev,global:[...prev.global||[],query].slice(-3)})),console.log(`Global search for: ${query}, found ${mockResults} results`)}}},filterSearch:{...args.uiSchema.filterSearch,"ui:options":{...args.uiSchema.filterSearch["ui:options"],onSearch:query=>{setSearchHistory(prev=>({...prev,filter:[...prev.filter||[],query].slice(-3)})),console.log("Filter search:",query)}}},categoryFilter:{...args.uiSchema.categoryFilter,"ui:options":{...args.uiSchema.categoryFilter["ui:options"],onSearch:query=>{setSearchHistory(prev=>({...prev,category:[...prev.category||[],query].slice(-3)})),console.log("Category filter:",query)}}}}};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Search Analytics"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Global Searches: ",searchHistory.global?.length||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Filter Searches: ",searchHistory.filter?.length||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Category Filters: ",searchHistory.category?.length||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Current Results: ",formData.resultCount]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Search History"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{fontSize:"11px"},children:Object.entries(searchHistory).map(([type,queries])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("strong",{children:[type,":"]})," ",queries?.join(", ")||"None"]},type))})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...enhancedArgs,formData:formData,onFormDataChange:setFormData})})}},BasicListField={args:{schema:{type:"object",properties:{technology:{type:"string",title:"Choose Technology",description:"Select your preferred technology",oneOf:[{const:"javascript",title:"JavaScript",description:"The language of the web",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"},{const:"typescript",title:"TypeScript",description:"JavaScript with type safety",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg"},{const:"react",title:"React",description:"A JavaScript library for building user interfaces",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg"},{const:"nodejs",title:"Node.js",description:"JavaScript runtime built on Chrome V8 engine",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg"}]}}},uiSchema:{technology:{"ui:field":"list","ui:showIconAsAvatar":!0,"ui:showSelected":!0}},formData:{technology:"react"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[selectionHistory,setSelectionHistory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Selection Activity"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Total Selections: ",selectionHistory.length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Current Selection: ",formData.technology||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Recent Selections:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{style:{margin:"5px 0",paddingLeft:"20px"},children:selectionHistory.slice(-3).map((entry,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:entry},index))||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"No selections yet"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:newData=>{if(newData.technology!==formData.technology&&newData.technology){const timestamp=(new Date).toLocaleTimeString();setSelectionHistory(prev=>[...prev,`${timestamp}: Selected ${newData.technology}`])}setFormData(newData)}})})}},ListWithMetaField={args:{schema:{type:"object",properties:{taskPriority:{type:"string",title:"Task Priority",description:"Select task priority level",oneOf:[{const:"urgent",title:"Urgent",description:"Needs immediate attention",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg",meta:"Due today"},{const:"high",title:"High Priority",description:"Important but not urgent",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg",meta:"Due this week"},{const:"medium",title:"Medium Priority",description:"Normal priority task",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg",meta:"Due next week"},{const:"low",title:"Low Priority",description:"Can be done when time permits",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg",meta:"No rush"}]}}},uiSchema:{taskPriority:{"ui:field":"list","ui:showIconAsAvatar":!1,"ui:showSelected":!0}},formData:{taskPriority:"high"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Priority Analysis"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Selected Priority: ",formData.taskPriority||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Priority Level: ","urgent"===formData.taskPriority?"🔴 Critical":"high"===formData.taskPriority?"🟠 High":"medium"===formData.taskPriority?"🟡 Medium":"low"===formData.taskPriority?"🟢 Low":"Not set"]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},CardListField={args:{schema:{type:"object",properties:{projectCard:{type:"string",title:"Choose Project",description:"Select a project to work on",oneOf:[{const:"web-app",title:"Web Application",description:"Modern React-based web application with TypeScript and advanced features",backgroundColor:"#e3f2fd",authorName:"John Smith",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg",meta:"5 days left"},{const:"mobile-app",title:"Mobile App",description:"Cross-platform mobile application using React Native",backgroundColor:"#f3e5f5",authorName:"Alice Johnson",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg",meta:"2 weeks left"},{const:"api-service",title:"API Service",description:"RESTful API service built with Node.js and Express",backgroundColor:"#e8f5e8",authorName:"Bob Wilson",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg",meta:"1 week left"},{const:"dashboard",title:"Analytics Dashboard",description:"Data visualization dashboard with real-time updates and charts",backgroundColor:"#fff3e0",authorName:"Carol Davis",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg",meta:"3 days left"}]}}},uiSchema:{projectCard:{"ui:field":"list","ui:itemType":"card","ui:itemWidth":"48%","ui:itemHeight":"110px","ui:showSelected":!1,"ui:readonly":!1}},formData:{projectCard:"web-app"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Project Stats"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Selected Project: ",formData.projectCard||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Project Status: ","web-app"===formData.projectCard?"🚀 In Development":"mobile-app"===formData.projectCard?"📱 Planning":"api-service"===formData.projectCard?"🔧 Testing":"dashboard"===formData.projectCard?"📊 Design Phase":"Not selected"]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},MetricCardsWidget={args:{schema:{type:"object",properties:{phoneActivity:{type:"string",title:"Phone Activity",description:"View phone activity metrics",oneOf:[{const:"inbound",title:"Inbound Call",value:"1",label:"inbound call"},{const:"outbound",title:"Outbound Calls",value:"8",label:"outbound calls"},{const:"answered",title:"Answered Calls",value:"1",label:"answered calls"},{const:"answer-rate",title:"Answer Rate",value:"100%",trend:"+67% company avg",trendColor:"success.f02"}]},phoneEngagement:{type:"string",title:"Phone Engagement",description:"View phone engagement metrics",oneOf:[{const:"total-talk-time",title:"Total Talk Time",value:"67",unit:"minutes",trend:"+38% company avg",trendColor:"success.f02"},{const:"avg-talk-time",title:"Average Talk Time",value:"22",unit:"minutes",trend:"-5% company avg",trendColor:"danger.f02"}]}}},uiSchema:{phoneActivity:{"ui:field":"list","ui:itemType":"metric","ui:itemWidth":"48%","ui:itemHeight":"120px","ui:showSelected":!1,"ui:readonly":!0},phoneEngagement:{"ui:field":"list","ui:itemType":"metric","ui:itemWidth":"48%","ui:itemHeight":"120px","ui:showSelected":!1}},formData:{phoneActivity:"",phoneEngagement:""}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Metric Dashboard"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Interactive: ",formData.phoneActivity||formData.phoneEngagement?"Yes":"No"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Selected Activity: ",formData.phoneActivity||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Selected Engagement: ",formData.phoneEngagement||"None"]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"10px",background:"#f8f9fa",borderRadius:"4px",marginBottom:"10px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:"Features:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{style:{margin:"5px 0",paddingLeft:"20px",fontSize:"11px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Large numeric values with descriptive labels"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Comparison indicators (positive/negative)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Responsive card layout"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Read-only mode for dashboard display"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},NavigationListField={args:{schema:{type:"object",properties:{navigationMenu:{type:"string",title:"Navigation Menu",description:"Select a page to navigate to",oneOf:[{const:"dashboard",title:"Dashboard",description:"Overview of your account and recent activity"},{const:"projects",title:"Projects",description:"Manage your projects and tasks"},{const:"team",title:"Team",description:"View team members and collaboration tools"},{const:"settings",title:"Settings",description:"Configure your account preferences"},{const:"help",title:"Help & Support",description:"Get help and contact support"}]}}},uiSchema:{navigationMenu:{"ui:field":"list","ui:navigation":!0,"ui:showIconAsAvatar":!1,"ui:showSelected":!1}},formData:{navigationMenu:""}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[navigationHistory,setNavigationHistory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Navigation Activity"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Current Page: ",formData.navigationMenu||"Home"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Total Navigations: ",navigationHistory.length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Navigation History:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{style:{margin:"5px 0",paddingLeft:"20px"},children:navigationHistory.slice(-3).map((entry,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:entry},index))||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"No navigation yet"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:newData=>{if(newData.navigationMenu!==formData.navigationMenu&&newData.navigationMenu){const timestamp=(new Date).toLocaleTimeString();setNavigationHistory(prev=>[...prev,`${timestamp}: Navigated to ${newData.navigationMenu}`])}setFormData(newData)}})})}},__namedExportsOrder=["ButtonFields","SearchAndFilterFields","BasicListField","ListWithMetaField","CardListField","MetricCardsWidget","NavigationListField"];ButtonFields.parameters={...ButtonFields.parameters,docs:{...ButtonFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        primaryButton: {\n          type: 'string',\n          title: 'Primary Action',\n          description: 'Standard primary button'\n        },\n        secondaryButton: {\n          type: 'string',\n          title: 'Secondary Action',\n          description: 'Outlined secondary button'\n        },\n        dangerButton: {\n          type: 'string',\n          title: 'Delete Item',\n          description: 'Danger action button'\n        },\n        textButton: {\n          type: 'string',\n          title: 'Text Button',\n          description: 'Simple text button'\n        },\n        fullWidthButton: {\n          type: 'string',\n          title: 'Full Width Button',\n          description: 'Button that spans full width'\n        },\n        plainButton: {\n          type: 'string',\n          title: 'Plain Button',\n          description: 'Plain style button'\n        }\n      }\n    },\n    uiSchema: {\n      primaryButton: {\n        'ui:field': 'button',\n        'ui:variant': 'contained',\n        'ui:color': 'primary'\n      },\n      secondaryButton: {\n        'ui:field': 'button',\n        'ui:variant': 'outlined',\n        'ui:color': 'secondary'\n      },\n      dangerButton: {\n        'ui:field': 'button',\n        'ui:variant': 'contained',\n        'ui:color': 'danger.b03'\n      },\n      textButton: {\n        'ui:field': 'button',\n        'ui:variant': 'text'\n      },\n      fullWidthButton: {\n        'ui:field': 'button',\n        'ui:variant': 'contained',\n        'ui:color': 'success',\n        'ui:fullWidth': true\n      },\n      plainButton: {\n        'ui:field': 'button',\n        'ui:variant': 'plain'\n      }\n    },\n    formData: {}\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [buttonClicks, setButtonClicks] = useState<{\n      primaryButton?: number;\n      secondaryButton?: number;\n      dangerButton?: number;\n      textButton?: number;\n      fullWidthButton?: number;\n      plainButton?: number;\n    }>({});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Button Interactions</h4>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              <p>Primary clicks: {buttonClicks.primaryButton || 0}</p>\n              <p>Secondary clicks: {buttonClicks.secondaryButton || 0}</p>\n              <p>Danger clicks: {buttonClicks.dangerButton || 0}</p>\n              <p>Text clicks: {buttonClicks.textButton || 0}</p>\n              <p>Full Width clicks: {buttonClicks.fullWidthButton || 0}</p>\n              <p>Plain clicks: {buttonClicks.plainButton || 0}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={data => {\n        setFormData(data);\n        args.onFormDataChange?.(data);\n      }} onSubmit={data => {\n        console.log('Button form submitted:', data.formData);\n        args.onSubmit?.(data);\n        alert('Form submitted! Check console and Actions panel.');\n      }} onButtonClick={(buttonId: string, value: string) => {\n        setButtonClicks(prev => ({\n          ...prev,\n          [buttonId]: (prev[buttonId as keyof typeof prev] || 0) + 1\n        }));\n        console.log('Button clicked:', buttonId, value);\n        args.onButtonClick?.(buttonId, value);\n      }} />\n      </StoryLayout>;\n  }\n}",...ButtonFields.parameters?.docs?.source}}},SearchAndFilterFields.parameters={...SearchAndFilterFields.parameters,docs:{...SearchAndFilterFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        globalSearch: {\n          type: 'string',\n          title: 'Global Search',\n          description: 'Search across all data'\n        },\n        filterSearch: {\n          type: 'string',\n          title: 'Filter Search',\n          description: 'Filter with autocomplete'\n        },\n        categoryFilter: {\n          type: 'string',\n          title: 'Category Filter',\n          description: 'Filter by category'\n        },\n        advancedSearch: {\n          type: 'string',\n          title: 'Advanced Search',\n          description: 'Search with advanced options'\n        },\n        searchResults: {\n          type: 'null',\n          title: 'Search Results',\n          description: 'Display search results dynamically'\n        },\n        resultCount: {\n          type: 'integer',\n          title: 'Result Count',\n          description: 'Number of results found',\n          default: 0\n        }\n      }\n    },\n    uiSchema: {\n      globalSearch: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Search everything...',\n          showSearchIcon: true,\n          onSearch: (query: string, formData: any, setFormData: any) => {\n            const mockResults = query ? Math.floor(Math.random() * 50) + 1 : 0;\n            setFormData((prev: any) => ({\n              ...prev,\n              resultCount: mockResults\n            }));\n            console.log(`Global search for: ${query}, found ${mockResults} results`);\n          }\n        }\n      },\n      filterSearch: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Type to filter...',\n          suggestions: ['JavaScript', 'TypeScript', 'React', 'Vue', 'Angular', 'Node.js', 'Python', 'Java', 'C++', 'Go'],\n          onSearch: (query: string) => {\n            console.log('Filter search:', query);\n          }\n        }\n      },\n      categoryFilter: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Select category...',\n          suggestions: ['Technology', 'Design', 'Marketing', 'Sales', 'Support', 'Development', 'Testing', 'DevOps', 'Management'],\n          variant: 'filter',\n          onSearch: (query: string) => {\n            console.log('Category filter:', query);\n          }\n        }\n      },\n      advancedSearch: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Advanced search with operators...',\n          helpText: 'Use quotes for exact match, + for required terms, - for excluded terms',\n          onSearch: (query: string) => {\n            console.log('Advanced search:', query);\n            alert(`Advanced search: ${query}`);\n          }\n        }\n      },\n      searchResults: {\n        'ui:field': 'typography',\n        'ui:options': {\n          variant: 'body1',\n          text: (formData: any) => {\n            if (formData.resultCount > 0) {\n              return `Found ${formData.resultCount} results for your search.`;\n            }\n            return 'No search performed yet.';\n          },\n          style: {\n            fontStyle: 'italic',\n            color: '#666',\n            padding: '10px',\n            backgroundColor: '#f0f0f0',\n            borderRadius: '4px'\n          }\n        }\n      }\n    },\n    formData: {\n      globalSearch: '',\n      filterSearch: '',\n      categoryFilter: '',\n      advancedSearch: '',\n      resultCount: 0\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [searchHistory, setSearchHistory] = useState<{\n      global?: string[];\n      filter?: string[];\n      category?: string[];\n      [key: string]: string[] | undefined;\n    }>({});\n\n    // Enhanced search handlers\n    const enhancedArgs = {\n      ...args,\n      uiSchema: {\n        ...args.uiSchema,\n        globalSearch: {\n          ...(args.uiSchema as any).globalSearch,\n          'ui:options': {\n            ...(args.uiSchema as any).globalSearch['ui:options'],\n            onSearch: (query: string, currentFormData: any, setCurrentFormData: any) => {\n              const mockResults = query ? Math.floor(Math.random() * 50) + 1 : 0;\n              setFormData((prev: any) => ({\n                ...prev,\n                resultCount: mockResults\n              }));\n              setSearchHistory(prev => ({\n                ...prev,\n                global: [...(prev.global || []), query].slice(-3)\n              }));\n              console.log(`Global search for: ${query}, found ${mockResults} results`);\n            }\n          }\n        },\n        filterSearch: {\n          ...(args.uiSchema as any).filterSearch,\n          'ui:options': {\n            ...(args.uiSchema as any).filterSearch['ui:options'],\n            onSearch: (query: string) => {\n              setSearchHistory(prev => ({\n                ...prev,\n                filter: [...(prev.filter || []), query].slice(-3)\n              }));\n              console.log('Filter search:', query);\n            }\n          }\n        },\n        categoryFilter: {\n          ...(args.uiSchema as any).categoryFilter,\n          'ui:options': {\n            ...(args.uiSchema as any).categoryFilter['ui:options'],\n            onSearch: (query: string) => {\n              setSearchHistory(prev => ({\n                ...prev,\n                category: [...(prev.category || []), query].slice(-3)\n              }));\n              console.log('Category filter:', query);\n            }\n          }\n        }\n      }\n    };\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Search Analytics</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Global Searches: {searchHistory.global?.length || 0}</p>\n              <p>Filter Searches: {searchHistory.filter?.length || 0}</p>\n              <p>Category Filters: {searchHistory.category?.length || 0}</p>\n              <p>Current Results: {formData.resultCount}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Search History</h4>\n            <div style={{\n        fontSize: '11px'\n      }}>\n              {Object.entries(searchHistory).map(([type, queries]) => <div key={type} style={{\n          marginBottom: '8px'\n        }}>\n                  <strong>{type}:</strong> {queries?.join(', ') || 'None'}\n                </div>)}\n            </div>\n          </>}>\n        <JSONSchemaPage {...enhancedArgs} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...SearchAndFilterFields.parameters?.docs?.source}}},BasicListField.parameters={...BasicListField.parameters,docs:{...BasicListField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        technology: {\n          type: 'string',\n          title: 'Choose Technology',\n          description: 'Select your preferred technology',\n          oneOf: [{\n            const: 'javascript',\n            title: 'JavaScript',\n            description: 'The language of the web',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg'\n          }, {\n            const: 'typescript',\n            title: 'TypeScript',\n            description: 'JavaScript with type safety',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg'\n          }, {\n            const: 'react',\n            title: 'React',\n            description: 'A JavaScript library for building user interfaces',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg'\n          }, {\n            const: 'nodejs',\n            title: 'Node.js',\n            description: 'JavaScript runtime built on Chrome V8 engine',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      technology: {\n        'ui:field': 'list',\n        'ui:showIconAsAvatar': true,\n        'ui:showSelected': true\n      }\n    },\n    formData: {\n      technology: 'react'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [selectionHistory, setSelectionHistory] = useState<string[]>([]);\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Selection Activity</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Total Selections: {selectionHistory.length}</p>\n              <p>Current Selection: {formData.technology || 'None'}</p>\n              <p>Recent Selections:</p>\n              <ul style={{\n          margin: '5px 0',\n          paddingLeft: '20px'\n        }}>\n                {selectionHistory.slice(-3).map((entry, index) => <li key={index}>{entry}</li>) || <li>No selections yet</li>}\n              </ul>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={newData => {\n        if (newData.technology !== formData.technology && newData.technology) {\n          const timestamp = new Date().toLocaleTimeString();\n          setSelectionHistory(prev => [...prev, `${timestamp}: Selected ${newData.technology}`]);\n        }\n        setFormData(newData);\n      }} />\n      </StoryLayout>;\n  }\n}",...BasicListField.parameters?.docs?.source}}},ListWithMetaField.parameters={...ListWithMetaField.parameters,docs:{...ListWithMetaField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        taskPriority: {\n          type: 'string',\n          title: 'Task Priority',\n          description: 'Select task priority level',\n          oneOf: [{\n            const: 'urgent',\n            title: 'Urgent',\n            description: 'Needs immediate attention',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg',\n            meta: 'Due today'\n          }, {\n            const: 'high',\n            title: 'High Priority',\n            description: 'Important but not urgent',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg',\n            meta: 'Due this week'\n          }, {\n            const: 'medium',\n            title: 'Medium Priority',\n            description: 'Normal priority task',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg',\n            meta: 'Due next week'\n          }, {\n            const: 'low',\n            title: 'Low Priority',\n            description: 'Can be done when time permits',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n            meta: 'No rush'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      taskPriority: {\n        'ui:field': 'list',\n        'ui:showIconAsAvatar': false,\n        'ui:showSelected': true\n      }\n    },\n    formData: {\n      taskPriority: 'high'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Priority Analysis</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Selected Priority: {formData.taskPriority || 'None'}</p>\n              <p>Priority Level: {formData.taskPriority === 'urgent' ? '🔴 Critical' : formData.taskPriority === 'high' ? '🟠 High' : formData.taskPriority === 'medium' ? '🟡 Medium' : formData.taskPriority === 'low' ? '🟢 Low' : 'Not set'}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...ListWithMetaField.parameters?.docs?.source}}},CardListField.parameters={...CardListField.parameters,docs:{...CardListField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        projectCard: {\n          type: 'string',\n          title: 'Choose Project',\n          description: 'Select a project to work on',\n          oneOf: [{\n            const: 'web-app',\n            title: 'Web Application',\n            description: 'Modern React-based web application with TypeScript and advanced features',\n            backgroundColor: '#e3f2fd',\n            authorName: 'John Smith',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n            meta: '5 days left'\n          }, {\n            const: 'mobile-app',\n            title: 'Mobile App',\n            description: 'Cross-platform mobile application using React Native',\n            backgroundColor: '#f3e5f5',\n            authorName: 'Alice Johnson',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg',\n            meta: '2 weeks left'\n          }, {\n            const: 'api-service',\n            title: 'API Service',\n            description: 'RESTful API service built with Node.js and Express',\n            backgroundColor: '#e8f5e8',\n            authorName: 'Bob Wilson',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n            meta: '1 week left'\n          }, {\n            const: 'dashboard',\n            title: 'Analytics Dashboard',\n            description: 'Data visualization dashboard with real-time updates and charts',\n            backgroundColor: '#fff3e0',\n            authorName: 'Carol Davis',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg',\n            meta: '3 days left'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      \"projectCard\": {\n        \"ui:field\": \"list\",\n        \"ui:itemType\": \"card\",\n        \"ui:itemWidth\": \"48%\",\n        \"ui:itemHeight\": \"110px\",\n        \"ui:showSelected\": false,\n        \"ui:readonly\": false\n      }\n    },\n    formData: {\n      projectCard: 'web-app'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Project Stats</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Selected Project: {formData.projectCard || 'None'}</p>\n              <p>Project Status: {formData.projectCard === 'web-app' ? '🚀 In Development' : formData.projectCard === 'mobile-app' ? '📱 Planning' : formData.projectCard === 'api-service' ? '🔧 Testing' : formData.projectCard === 'dashboard' ? '📊 Design Phase' : 'Not selected'}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...CardListField.parameters?.docs?.source}}},MetricCardsWidget.parameters={...MetricCardsWidget.parameters,docs:{...MetricCardsWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        phoneActivity: {\n          type: 'string',\n          title: 'Phone Activity',\n          description: 'View phone activity metrics',\n          oneOf: [{\n            const: 'inbound',\n            title: 'Inbound Call',\n            value: '1',\n            label: 'inbound call'\n          }, {\n            const: 'outbound',\n            title: 'Outbound Calls',\n            value: '8',\n            label: 'outbound calls'\n          }, {\n            const: 'answered',\n            title: 'Answered Calls',\n            value: '1',\n            label: 'answered calls'\n          }, {\n            const: 'answer-rate',\n            title: 'Answer Rate',\n            value: '100%',\n            trend: '+67% company avg',\n            trendColor: 'success.f02'\n          }]\n        },\n        phoneEngagement: {\n          type: 'string',\n          title: 'Phone Engagement',\n          description: 'View phone engagement metrics',\n          oneOf: [{\n            const: 'total-talk-time',\n            title: 'Total Talk Time',\n            value: '67',\n            unit: 'minutes',\n            trend: '+38% company avg',\n            trendColor: 'success.f02'\n          }, {\n            const: 'avg-talk-time',\n            title: 'Average Talk Time',\n            value: '22',\n            unit: 'minutes',\n            trend: '-5% company avg',\n            trendColor: 'danger.f02'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      phoneActivity: {\n        'ui:field': 'list',\n        'ui:itemType': 'metric',\n        'ui:itemWidth': '48%',\n        'ui:itemHeight': '120px',\n        'ui:showSelected': false,\n        'ui:readonly': true\n      },\n      phoneEngagement: {\n        'ui:field': 'list',\n        'ui:itemType': 'metric',\n        'ui:itemWidth': '48%',\n        'ui:itemHeight': '120px',\n        'ui:showSelected': false\n      }\n    },\n    formData: {\n      phoneActivity: '',\n      phoneEngagement: ''\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Metric Dashboard</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Interactive: {formData.phoneActivity || formData.phoneEngagement ? 'Yes' : 'No'}</p>\n              <p>Selected Activity: {formData.phoneActivity || 'None'}</p>\n              <p>Selected Engagement: {formData.phoneEngagement || 'None'}</p>\n            </div>\n            <div style={{\n        padding: '10px',\n        background: '#f8f9fa',\n        borderRadius: '4px',\n        marginBottom: '10px'\n      }}>\n              <strong>Features:</strong>\n              <ul style={{\n          margin: '5px 0',\n          paddingLeft: '20px',\n          fontSize: '11px'\n        }}>\n                <li>Large numeric values with descriptive labels</li>\n                <li>Comparison indicators (positive/negative)</li>\n                <li>Responsive card layout</li>\n                <li>Read-only mode for dashboard display</li>\n              </ul>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...MetricCardsWidget.parameters?.docs?.source}}},NavigationListField.parameters={...NavigationListField.parameters,docs:{...NavigationListField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        navigationMenu: {\n          type: 'string',\n          title: 'Navigation Menu',\n          description: 'Select a page to navigate to',\n          oneOf: [{\n            const: 'dashboard',\n            title: 'Dashboard',\n            description: 'Overview of your account and recent activity'\n          }, {\n            const: 'projects',\n            title: 'Projects',\n            description: 'Manage your projects and tasks'\n          }, {\n            const: 'team',\n            title: 'Team',\n            description: 'View team members and collaboration tools'\n          }, {\n            const: 'settings',\n            title: 'Settings',\n            description: 'Configure your account preferences'\n          }, {\n            const: 'help',\n            title: 'Help & Support',\n            description: 'Get help and contact support'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      navigationMenu: {\n        'ui:field': 'list',\n        'ui:navigation': true,\n        'ui:showIconAsAvatar': false,\n        'ui:showSelected': false\n      }\n    },\n    formData: {\n      navigationMenu: ''\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [navigationHistory, setNavigationHistory] = useState<string[]>([]);\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Navigation Activity</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Current Page: {formData.navigationMenu || 'Home'}</p>\n              <p>Total Navigations: {navigationHistory.length}</p>\n              <p>Navigation History:</p>\n              <ul style={{\n          margin: '5px 0',\n          paddingLeft: '20px'\n        }}>\n                {navigationHistory.slice(-3).map((entry, index) => <li key={index}>{entry}</li>) || <li>No navigation yet</li>}\n              </ul>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={newData => {\n        if (newData.navigationMenu !== formData.navigationMenu && newData.navigationMenu) {\n          const timestamp = new Date().toLocaleTimeString();\n          setNavigationHistory(prev => [...prev, `${timestamp}: Navigated to ${newData.navigationMenu}`]);\n        }\n        setFormData(newData);\n      }} />\n      </StoryLayout>;\n  }\n}",...NavigationListField.parameters?.docs?.source}}}},"./src/__stories__/Widgets.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BooleanToggleWidget:function(){return BooleanToggleWidget},CheckboxWidget:function(){return CheckboxWidget},FileUploadWidget:function(){return FileUploadWidget},NumberInputWidget:function(){return NumberInputWidget},RadioWidget:function(){return RadioWidget},RangeWidget:function(){return RangeWidget},SelectWidget:function(){return SelectWidget},TextInputWidget:function(){return TextInputWidget},TextareaWidget:function(){return TextareaWidget},__namedExportsOrder:function(){return __namedExportsOrder}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@ringcentral/juno/es6/foundation/theme/ThemeProvider.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.tsx");const StoryLayout=({args:args,children:children,resultComponent:resultComponent})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),resultComponent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:resultComponent})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:children})})})]}),meta={title:"JSONSchemaPage/Form Input Widgets",component:_index__WEBPACK_IMPORTED_MODULE_2__.v,parameters:{layout:"fullscreen",docs:{description:{component:"Form input widgets for collecting user data - Text inputs, Numbers, Selections, Toggles, File uploads, and other interactive form controls"}}},tags:["autodocs"],argTypes:{schema:{description:"JSON Schema that defines the form structure - Edit to see live updates!",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},uiSchema:{description:"UI Schema that defines how the form should be rendered - Customize appearance and behavior",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},formData:{description:"Current form data values - Set initial form values",control:{type:"object"},table:{type:{summary:"object"},defaultValue:{summary:"{}"}}},onFormDataChange:{action:"formDataChanged",description:"Called when form data changes",table:{type:{summary:"function"}}},onSubmit:{action:"formSubmitted",description:"Called when form is submitted",table:{type:{summary:"function"}}},onButtonClick:{action:"buttonClicked",description:"Called when custom buttons are clicked",table:{type:{summary:"function"}}}}};__webpack_exports__.default=meta;const TextInputWidget={args:{schema:{type:"object",properties:{basicText:{type:"string",title:"Basic Text Input",description:"Standard text input field"},emailInput:{type:"string",format:"email",title:"Email Input",description:"Email format validation"},urlInput:{type:"string",format:"uri",title:"URL Input",description:"URL format validation"},passwordInput:{type:"string",title:"Password Input",description:"Hidden text input"},patternText:{type:"string",title:"Pattern Validation",pattern:"^[A-Za-z]+$",description:"Only letters allowed"},minMaxText:{type:"string",title:"Length Validation",minLength:3,maxLength:10,description:"Between 3-10 characters"}}},uiSchema:{basicText:{"ui:placeholder":"Enter any text..."},emailInput:{"ui:placeholder":"user@example.com"},urlInput:{"ui:placeholder":"https://example.com"},passwordInput:{"ui:widget":"password","ui:placeholder":"Enter password"},patternText:{"ui:placeholder":"LettersOnly","ui:help":"Only alphabetic characters are allowed"},minMaxText:{"ui:placeholder":"Min 3, Max 10 chars"}},formData:{basicText:"Sample text",emailInput:"user@example.com",urlInput:"https://ringcentral.com"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Input Statistics"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Basic Text: ",formData.basicText?.length||0," characters"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Email Valid: ",/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.emailInput)?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["URL Valid: ",/^https?:\/\/.+/.test(formData.urlInput)?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Pattern Valid: ",/^[A-Za-z]+$/.test(formData.patternText)?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Length Valid: ",formData.minMaxText?.length>=3&&formData.minMaxText?.length<=10?"✅":"❌"]})]})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:data=>{setFormData(data),args.onFormDataChange?.(data)},onSubmit:data=>{console.log("Text inputs submitted:",data.formData),args.onSubmit?.(data),alert("Form submitted! Check console and Actions panel.")},onButtonClick:(name,value)=>{console.log("Button clicked:",name,value),args.onButtonClick?.(name,value)}})})}},NumberInputWidget={args:{schema:{type:"object",properties:{basicNumber:{type:"number",title:"Basic Number",description:"Any numeric value"},integerOnly:{type:"integer",title:"Integer Only",description:"Whole numbers only"},minMaxNumber:{type:"number",title:"Range Constrained",minimum:0,maximum:100,description:"Between 0 and 100"},stepNumber:{type:"number",title:"Step Increment",multipleOf:.5,description:"Increments of 0.5"},currencyAmount:{type:"number",title:"Currency Amount",minimum:0,multipleOf:.01,description:"Dollar amount (cents precision)"},percentage:{type:"number",title:"Percentage",minimum:0,maximum:100,multipleOf:.01,description:"Percentage value"}}},uiSchema:{basicNumber:{"ui:placeholder":"123.45"},integerOnly:{"ui:placeholder":"42"},minMaxNumber:{"ui:placeholder":"50"},stepNumber:{"ui:placeholder":"1.5","ui:options":{step:.5}},currencyAmount:{"ui:placeholder":"19.99","ui:options":{step:.01}},percentage:{"ui:placeholder":"75.25","ui:options":{step:.01}}},formData:{basicNumber:123.45,integerOnly:42,minMaxNumber:50,stepNumber:2.5,currencyAmount:19.99,percentage:75.25}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Number Analysis"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Basic: ",formData.basicNumber]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Integer: ",formData.integerOnly," ",Number.isInteger(formData.integerOnly)?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Range Valid: ",formData.minMaxNumber>=0&&formData.minMaxNumber<=100?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Step Valid: ",formData.stepNumber%.5==0?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Currency: $",formData.currencyAmount?.toFixed(2)]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Percentage: ",formData.percentage,"%"]})]})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},BooleanToggleWidget={args:{schema:{type:"object",properties:{basicToggle:{type:"boolean",title:"Basic Toggle",description:"Simple on/off switch"},defaultTrue:{type:"boolean",title:"Default Enabled",default:!0,description:"Defaults to enabled state"},requiredToggle:{type:"boolean",title:"Required Agreement",description:"Must be checked to proceed"},consentToggle:{type:"boolean",title:"Marketing Consent",description:"Receive marketing communications"},privacyToggle:{type:"boolean",title:"Privacy Settings",description:"Enable privacy mode"},notificationToggle:{type:"boolean",title:"Push Notifications",description:"Allow push notifications"}},required:["requiredToggle"]},uiSchema:{basicToggle:{"ui:widget":"checkbox"},defaultTrue:{"ui:widget":"checkbox"},requiredToggle:{"ui:widget":"checkbox","ui:help":"This field is required"},consentToggle:{"ui:widget":"checkbox"},privacyToggle:{"ui:widget":"checkbox"},notificationToggle:{"ui:widget":"checkbox"}},formData:{basicToggle:!1,defaultTrue:!0,requiredToggle:!0,consentToggle:!1,privacyToggle:!0,notificationToggle:!1}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),enabledCount=Object.values(formData).filter(Boolean).length,totalCount=Object.keys(formData).length;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Toggle States"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Enabled: ",enabledCount,"/",totalCount]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Progress: ",Math.round(enabledCount/totalCount*100),"%"]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{fontSize:"12px"},children:Object.entries(formData).map(([key,value])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:[key,": ",value?"✅ ON":"❌ OFF"]},key))})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},FileUploadWidget={args:{schema:{type:"object",properties:{singleFile:{type:"string",title:"Single File Upload",format:"data-url",description:"Select a single file to upload"},profileImage:{type:"string",title:"Profile Image",format:"data-url",description:"Upload your profile picture (JPG, PNG only)"},resume:{type:"string",title:"Resume (Max 5MB)",format:"data-url",description:"Upload your resume (PDF, DOC files)"},documents:{type:"array",title:"Multiple Documents",items:{type:"string",format:"data-url"},description:"Upload multiple files at once"}}},uiSchema:{singleFile:{"ui:widget":"file","ui:accept":"*/*","ui:placeholder":"Choose any file..."},profileImage:{"ui:widget":"file","ui:accept":"image/*","ui:placeholder":"Choose an image..."},resume:{"ui:widget":"file","ui:accept":".pdf,.doc,.docx","ui:maxSize":5242880,"ui:placeholder":"Choose a document..."},documents:{items:{"ui:widget":"file","ui:multiple":!0,"ui:accept":"*/*","ui:placeholder":"Choose multiple files..."}}},formData:{singleFile:null,profileImage:null,resume:null,documents:null}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[uploadStats,setUploadStats]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({totalFiles:0,totalSize:0,fileTypes:{}});react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{const allFiles=[];formData.singleFile&&"object"==typeof formData.singleFile&&allFiles.push(formData.singleFile),formData.profileImage&&"object"==typeof formData.profileImage&&allFiles.push(formData.profileImage),formData.resume&&"object"==typeof formData.resume&&allFiles.push(formData.resume),Array.isArray(formData.documents)&&allFiles.push(...formData.documents);const stats=allFiles.reduce((acc,file)=>{if(file&&file.name&&file.size){acc.totalFiles+=1,acc.totalSize+=file.size;const ext=file.name.split(".").pop()?.toLowerCase()||"unknown";acc.fileTypes[ext]=(acc.fileTypes[ext]||0)+1}return acc},{totalFiles:0,totalSize:0,fileTypes:{}});setUploadStats(stats)},[formData]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Upload Statistics"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Total Files: ",uploadStats.totalFiles]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Total Size: ",(bytes=>{if(0===bytes)return"0 Bytes";const i=Math.floor(Math.log(bytes)/Math.log(1024));return parseFloat((bytes/Math.pow(1024,i)).toFixed(2))+" "+["Bytes","KB","MB","GB"][i]})(uploadStats.totalSize)]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"File Types:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{style:{margin:"5px 0",paddingLeft:"20px"},children:Object.entries(uploadStats.fileTypes).length>0?Object.entries(uploadStats.fileTypes).map(([type,count])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[type,": ",count," file",count>1?"s":""]},type)):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"No files uploaded yet"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"💡 Widget Features"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"11px",marginBottom:"15px",color:"#666"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"• Single file: Returns FileInfoType object with dataURL, name, size, type"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"• Multiple files: Returns array of FileInfoType objects"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"• File size validation: resume field has 5MB maxSize limit"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"• Accept filter: profileImage accepts only images"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"• Files are converted to base64 dataURL format"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"• Drag & drop supported, click attachment icon to browse"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},RangeWidget={args:{schema:{type:"object",properties:{basicRange:{type:"integer",title:"Basic Range",minimum:0,maximum:100,description:"A simple range slider"},temperatureRange:{type:"integer",title:"Temperature",minimum:-20,maximum:50,description:"Temperature in Celsius"},priceRange:{type:"number",title:"Price Range",minimum:0,maximum:1e3,multipleOf:.01,description:"Select price range"},percentageRange:{type:"integer",title:"Percentage",minimum:0,maximum:100,description:"Percentage value"}}},uiSchema:{basicRange:{"ui:widget":"range"},temperatureRange:{"ui:widget":"range","ui:options":{step:1}},priceRange:{"ui:widget":"range","ui:options":{step:10}},percentageRange:{"ui:widget":"range","ui:options":{step:5}}},formData:{basicRange:50,temperatureRange:20,priceRange:500,percentageRange:75}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Current Values"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{style:{fontSize:"12px",margin:0,paddingLeft:"20px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Basic Range: ",formData.basicRange]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Temperature: ",formData.temperatureRange,"°C"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Price: $",formData.priceRange]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Percentage: ",formData.percentageRange,"%"]})]})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},RadioWidget={args:{schema:{type:"object",properties:{favoriteColor:{type:"string",title:"Favorite Color",oneOf:[{const:"neutral",title:"Neutral",color:"#939393"},{const:"yellow",title:"Yellow",color:"#B17D1A"},{const:"purple",title:"Purple",color:"#8A77E3"}],description:"Choose your favorite color"},priority:{type:"string",title:"Priority Level",enum:["low","medium","high","urgent"],enumNames:["Low Priority","Medium Priority","High Priority","Urgent"]},tab:{type:"string",title:"Tab",enum:["tab1","tab2","tab3"],enumNames:["Tab 1","Tab 2","Tab 3"]},size:{type:"string",title:"T-Shirt Size",enum:["xs","s","m","l","xl","xxl"],enumNames:["Extra Small","Small","Medium","Large","Extra Large","XXL"],description:"Select your size"}}},uiSchema:{favoriteColor:{"ui:widget":"radio","ui:inline":!0},priority:{"ui:widget":"radio","ui:inline":!0},tab:{"ui:widget":"radio","ui:inline":!0,"ui:tab":!0},size:{"ui:widget":"radio"}},formData:{favoriteColor:"blue",priority:"medium",tab:"tab1",size:"m"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Selected Values"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},SelectWidget={args:{schema:{type:"object",properties:{country:{type:"string",title:"Country",enum:["us","ca","uk","de","fr","jp","au"],enumNames:["United States","Canada","United Kingdom","Germany","France","Japan","Australia"],description:"Select your country"},language:{type:"string",title:"Programming Language",enum:["javascript","typescript","python","java","csharp","go","rust"],enumNames:["JavaScript","TypeScript","Python","Java","C#","Go","Rust"]},multipleLanguages:{type:"array",title:"Multiple Languages",items:{type:"string",enum:["javascript","typescript","python","java","csharp","go","rust"],enumNames:["JavaScript","TypeScript","Python","Java","C#","Go","Rust"]},uniqueItems:!0,description:"Select multiple programming languages"}}},uiSchema:{country:{"ui:placeholder":"Choose a country..."},language:{"ui:placeholder":"Select a language..."},multipleLanguages:{"ui:widget":"select","ui:placeholder":"Select languages..."}},formData:{country:"us",language:"typescript",multipleLanguages:["javascript","typescript"]}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Selected Values"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},CheckboxWidget={args:{schema:{type:"object",properties:{agreeToTerms:{type:"boolean",title:"I agree to the terms and conditions",description:"You must agree to continue"},enableNotifications:{type:"boolean",title:"Enable push notifications",default:!0},subscribeNewsletter:{type:"boolean",title:"Subscribe to newsletter",description:"Receive weekly updates via email"},features:{type:"array",title:"Enabled Features",items:{type:"string",enum:["feature1","feature2","feature3","feature4"]},uniqueItems:!0,description:"Select which features to enable"},preferences:{type:"object",title:"User Preferences",properties:{darkMode:{type:"boolean",title:"Dark Mode",default:!1},autoSave:{type:"boolean",title:"Auto Save",default:!0},showTips:{type:"boolean",title:"Show Tips",default:!0}}}}},uiSchema:{features:{"ui:widget":"checkboxes","ui:options":{enumOptions:[{value:"feature1",label:"Advanced Analytics"},{value:"feature2",label:"Real-time Sync"},{value:"feature3",label:"Custom Themes"},{value:"feature4",label:"API Access"}]}}},formData:{enableNotifications:!0,features:["feature1","feature2"],preferences:{darkMode:!1,autoSave:!0,showTips:!0}}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Checkbox States"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Terms Agreed: ",formData.agreeToTerms?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Notifications: ",formData.enableNotifications?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Newsletter: ",formData.subscribeNewsletter?"✅":"❌"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Features: ",formData.features?.length||0," selected"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Dark Mode: ",formData.preferences?.darkMode?"✅":"❌"]})]})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},TextareaWidget={args:{schema:{type:"object",properties:{description:{type:"string",title:"Product Description",description:"Enter a detailed description of the product"},feedback:{type:"string",title:"Feedback",description:"Share your thoughts and suggestions"},code:{type:"string",title:"Code Snippet",description:"Paste your code here"},notes:{type:"string",title:"Additional Notes",description:"Any additional information"}}},uiSchema:{description:{"ui:widget":"textarea","ui:options":{rows:4,placeholder:"Enter product description..."}},feedback:{"ui:widget":"textarea","ui:options":{rows:3,placeholder:"We value your feedback..."}},code:{"ui:widget":"textarea","ui:options":{rows:6,placeholder:"function example() {\n  // Your code here\n}"}},notes:{"ui:widget":"textarea","ui:options":{rows:2,placeholder:"Optional notes..."}}},formData:{description:"This is a high-quality product designed for professionals.",code:"function greet(name) {\n  return `Hello, ${name}!`;\n}"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Text Statistics"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Description: ",formData.description?.length||0," characters"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Feedback: ",formData.feedback?.length||0," characters"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Code: ",formData.code?.length||0," characters"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Notes: ",formData.notes?.length||0," characters"]})]})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},__namedExportsOrder=["TextInputWidget","NumberInputWidget","BooleanToggleWidget","FileUploadWidget","RangeWidget","RadioWidget","SelectWidget","CheckboxWidget","TextareaWidget"];TextInputWidget.parameters={...TextInputWidget.parameters,docs:{...TextInputWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        basicText: {\n          type: 'string',\n          title: 'Basic Text Input',\n          description: 'Standard text input field'\n        },\n        emailInput: {\n          type: 'string',\n          format: 'email',\n          title: 'Email Input',\n          description: 'Email format validation'\n        },\n        urlInput: {\n          type: 'string',\n          format: 'uri',\n          title: 'URL Input',\n          description: 'URL format validation'\n        },\n        passwordInput: {\n          type: 'string',\n          title: 'Password Input',\n          description: 'Hidden text input'\n        },\n        patternText: {\n          type: 'string',\n          title: 'Pattern Validation',\n          pattern: '^[A-Za-z]+$',\n          description: 'Only letters allowed'\n        },\n        minMaxText: {\n          type: 'string',\n          title: 'Length Validation',\n          minLength: 3,\n          maxLength: 10,\n          description: 'Between 3-10 characters'\n        }\n      }\n    },\n    uiSchema: {\n      basicText: {\n        'ui:placeholder': 'Enter any text...'\n      },\n      emailInput: {\n        'ui:placeholder': 'user@example.com'\n      },\n      urlInput: {\n        'ui:placeholder': 'https://example.com'\n      },\n      passwordInput: {\n        'ui:widget': 'password',\n        'ui:placeholder': 'Enter password'\n      },\n      patternText: {\n        'ui:placeholder': 'LettersOnly',\n        'ui:help': 'Only alphabetic characters are allowed'\n      },\n      minMaxText: {\n        'ui:placeholder': 'Min 3, Max 10 chars'\n      }\n    },\n    formData: {\n      basicText: 'Sample text',\n      emailInput: 'user@example.com',\n      urlInput: 'https://ringcentral.com'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Input Statistics</h4>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              <p>Basic Text: {formData.basicText?.length || 0} characters</p>\n              <p>Email Valid: {/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.emailInput) ? '✅' : '❌'}</p>\n              <p>URL Valid: {/^https?:\\/\\/.+/.test(formData.urlInput) ? '✅' : '❌'}</p>\n              <p>Pattern Valid: {/^[A-Za-z]+$/.test(formData.patternText) ? '✅' : '❌'}</p>\n              <p>Length Valid: {formData.minMaxText?.length >= 3 && formData.minMaxText?.length <= 10 ? '✅' : '❌'}</p>\n            </div>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={data => {\n        setFormData(data);\n        args.onFormDataChange?.(data);\n      }} onSubmit={data => {\n        console.log('Text inputs submitted:', data.formData);\n        args.onSubmit?.(data);\n        alert('Form submitted! Check console and Actions panel.');\n      }} onButtonClick={(name, value) => {\n        console.log('Button clicked:', name, value);\n        args.onButtonClick?.(name, value);\n      }} />\n      </StoryLayout>;\n  }\n}",...TextInputWidget.parameters?.docs?.source}}},NumberInputWidget.parameters={...NumberInputWidget.parameters,docs:{...NumberInputWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        basicNumber: {\n          type: 'number',\n          title: 'Basic Number',\n          description: 'Any numeric value'\n        },\n        integerOnly: {\n          type: 'integer',\n          title: 'Integer Only',\n          description: 'Whole numbers only'\n        },\n        minMaxNumber: {\n          type: 'number',\n          title: 'Range Constrained',\n          minimum: 0,\n          maximum: 100,\n          description: 'Between 0 and 100'\n        },\n        stepNumber: {\n          type: 'number',\n          title: 'Step Increment',\n          multipleOf: 0.5,\n          description: 'Increments of 0.5'\n        },\n        currencyAmount: {\n          type: 'number',\n          title: 'Currency Amount',\n          minimum: 0,\n          multipleOf: 0.01,\n          description: 'Dollar amount (cents precision)'\n        },\n        percentage: {\n          type: 'number',\n          title: 'Percentage',\n          minimum: 0,\n          maximum: 100,\n          multipleOf: 0.01,\n          description: 'Percentage value'\n        }\n      }\n    },\n    uiSchema: {\n      basicNumber: {\n        'ui:placeholder': '123.45'\n      },\n      integerOnly: {\n        'ui:placeholder': '42'\n      },\n      minMaxNumber: {\n        'ui:placeholder': '50'\n      },\n      stepNumber: {\n        'ui:placeholder': '1.5',\n        'ui:options': {\n          step: 0.5\n        }\n      },\n      currencyAmount: {\n        'ui:placeholder': '19.99',\n        'ui:options': {\n          step: 0.01\n        }\n      },\n      percentage: {\n        'ui:placeholder': '75.25',\n        'ui:options': {\n          step: 0.01\n        }\n      }\n    },\n    formData: {\n      basicNumber: 123.45,\n      integerOnly: 42,\n      minMaxNumber: 50,\n      stepNumber: 2.5,\n      currencyAmount: 19.99,\n      percentage: 75.25\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Number Analysis</h4>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              <p>Basic: {formData.basicNumber}</p>\n              <p>Integer: {formData.integerOnly} {Number.isInteger(formData.integerOnly) ? '✅' : '❌'}</p>\n              <p>Range Valid: {formData.minMaxNumber >= 0 && formData.minMaxNumber <= 100 ? '✅' : '❌'}</p>\n              <p>Step Valid: {formData.stepNumber % 0.5 === 0 ? '✅' : '❌'}</p>\n              <p>Currency: ${formData.currencyAmount?.toFixed(2)}</p>\n              <p>Percentage: {formData.percentage}%</p>\n            </div>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...NumberInputWidget.parameters?.docs?.source}}},BooleanToggleWidget.parameters={...BooleanToggleWidget.parameters,docs:{...BooleanToggleWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        basicToggle: {\n          type: 'boolean',\n          title: 'Basic Toggle',\n          description: 'Simple on/off switch'\n        },\n        defaultTrue: {\n          type: 'boolean',\n          title: 'Default Enabled',\n          default: true,\n          description: 'Defaults to enabled state'\n        },\n        requiredToggle: {\n          type: 'boolean',\n          title: 'Required Agreement',\n          description: 'Must be checked to proceed'\n        },\n        consentToggle: {\n          type: 'boolean',\n          title: 'Marketing Consent',\n          description: 'Receive marketing communications'\n        },\n        privacyToggle: {\n          type: 'boolean',\n          title: 'Privacy Settings',\n          description: 'Enable privacy mode'\n        },\n        notificationToggle: {\n          type: 'boolean',\n          title: 'Push Notifications',\n          description: 'Allow push notifications'\n        }\n      },\n      required: ['requiredToggle']\n    },\n    uiSchema: {\n      basicToggle: {\n        'ui:widget': 'checkbox'\n      },\n      defaultTrue: {\n        'ui:widget': 'checkbox'\n      },\n      requiredToggle: {\n        'ui:widget': 'checkbox',\n        'ui:help': 'This field is required'\n      },\n      consentToggle: {\n        'ui:widget': 'checkbox'\n      },\n      privacyToggle: {\n        'ui:widget': 'checkbox'\n      },\n      notificationToggle: {\n        'ui:widget': 'checkbox'\n      }\n    },\n    formData: {\n      basicToggle: false,\n      defaultTrue: true,\n      requiredToggle: true,\n      consentToggle: false,\n      privacyToggle: true,\n      notificationToggle: false\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const enabledCount = Object.values(formData).filter(Boolean).length;\n    const totalCount = Object.keys(formData).length;\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Toggle States</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Enabled: {enabledCount}/{totalCount}</p>\n              <p>Progress: {Math.round(enabledCount / totalCount * 100)}%</p>\n            </div>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              {Object.entries(formData).map(([key, value]) => <p key={key}>\n                  {key}: {value ? '✅ ON' : '❌ OFF'}\n                </p>)}\n            </div>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...BooleanToggleWidget.parameters?.docs?.source}}},FileUploadWidget.parameters={...FileUploadWidget.parameters,docs:{...FileUploadWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        singleFile: {\n          type: 'string',\n          title: 'Single File Upload',\n          format: 'data-url',\n          description: 'Select a single file to upload'\n        },\n        profileImage: {\n          type: 'string',\n          title: 'Profile Image',\n          format: 'data-url',\n          description: 'Upload your profile picture (JPG, PNG only)'\n        },\n        resume: {\n          type: 'string',\n          title: 'Resume (Max 5MB)',\n          format: 'data-url',\n          description: 'Upload your resume (PDF, DOC files)'\n        },\n        documents: {\n          type: 'array',\n          title: 'Multiple Documents',\n          items: {\n            type: 'string',\n            format: 'data-url'\n          },\n          description: 'Upload multiple files at once'\n        }\n      }\n    },\n    uiSchema: {\n      singleFile: {\n        'ui:widget': 'file',\n        'ui:accept': '*/*',\n        'ui:placeholder': 'Choose any file...'\n      },\n      profileImage: {\n        'ui:widget': 'file',\n        'ui:accept': 'image/*',\n        'ui:placeholder': 'Choose an image...'\n      },\n      resume: {\n        'ui:widget': 'file',\n        'ui:accept': '.pdf,.doc,.docx',\n        'ui:maxSize': 5242880,\n        // 5MB in bytes\n        'ui:placeholder': 'Choose a document...'\n      },\n      documents: {\n        items: {\n          'ui:widget': 'file',\n          'ui:multiple': true,\n          'ui:accept': '*/*',\n          'ui:placeholder': 'Choose multiple files...'\n        }\n      }\n    },\n    formData: {\n      singleFile: null,\n      profileImage: null,\n      resume: null,\n      documents: null\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [uploadStats, setUploadStats] = useState({\n      totalFiles: 0,\n      totalSize: 0,\n      fileTypes: {} as Record<string, number>\n    });\n\n    // Calculate upload statistics\n    React.useEffect(() => {\n      const allFiles = [];\n\n      // Add single files\n      if (formData.singleFile && typeof formData.singleFile === 'object') {\n        allFiles.push(formData.singleFile);\n      }\n      if (formData.profileImage && typeof formData.profileImage === 'object') {\n        allFiles.push(formData.profileImage);\n      }\n      if (formData.resume && typeof formData.resume === 'object') {\n        allFiles.push(formData.resume);\n      }\n\n      // Add multiple files\n      if (Array.isArray(formData.documents)) {\n        allFiles.push(...formData.documents);\n      }\n      const stats = allFiles.reduce((acc, file) => {\n        if (file && file.name && file.size) {\n          acc.totalFiles += 1;\n          acc.totalSize += file.size;\n          const ext = file.name.split('.').pop()?.toLowerCase() || 'unknown';\n          acc.fileTypes[ext] = (acc.fileTypes[ext] || 0) + 1;\n        }\n        return acc;\n      }, {\n        totalFiles: 0,\n        totalSize: 0,\n        fileTypes: {} as Record<string, number>\n      });\n      setUploadStats(stats);\n    }, [formData]);\n    const formatFileSize = (bytes: number) => {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Upload Statistics</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Total Files: {uploadStats.totalFiles}</p>\n              <p>Total Size: {formatFileSize(uploadStats.totalSize)}</p>\n              <p>File Types:</p>\n              <ul style={{\n          margin: '5px 0',\n          paddingLeft: '20px'\n        }}>\n                {Object.entries(uploadStats.fileTypes).length > 0 ? Object.entries(uploadStats.fileTypes).map(([type, count]) => <li key={type}>{type}: {count} file{count > 1 ? 's' : ''}</li>) : <li>No files uploaded yet</li>}\n              </ul>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>💡 Widget Features</h4>\n            <div style={{\n        fontSize: '11px',\n        marginBottom: '15px',\n        color: '#666'\n      }}>\n              <p>• Single file: Returns FileInfoType object with dataURL, name, size, type</p>\n              <p>• Multiple files: Returns array of FileInfoType objects</p>\n              <p>• File size validation: resume field has 5MB maxSize limit</p>\n              <p>• Accept filter: profileImage accepts only images</p>\n              <p>• Files are converted to base64 dataURL format</p>\n              <p>• Drag & drop supported, click attachment icon to browse</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...FileUploadWidget.parameters?.docs?.source}}},RangeWidget.parameters={...RangeWidget.parameters,docs:{...RangeWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        basicRange: {\n          type: 'integer',\n          title: 'Basic Range',\n          minimum: 0,\n          maximum: 100,\n          description: 'A simple range slider'\n        },\n        temperatureRange: {\n          type: 'integer',\n          title: 'Temperature',\n          minimum: -20,\n          maximum: 50,\n          description: 'Temperature in Celsius'\n        },\n        priceRange: {\n          type: 'number',\n          title: 'Price Range',\n          minimum: 0,\n          maximum: 1000,\n          multipleOf: 0.01,\n          description: 'Select price range'\n        },\n        percentageRange: {\n          type: 'integer',\n          title: 'Percentage',\n          minimum: 0,\n          maximum: 100,\n          description: 'Percentage value'\n        }\n      }\n    },\n    uiSchema: {\n      basicRange: {\n        'ui:widget': 'range'\n      },\n      temperatureRange: {\n        'ui:widget': 'range',\n        'ui:options': {\n          step: 1\n        }\n      },\n      priceRange: {\n        'ui:widget': 'range',\n        'ui:options': {\n          step: 10\n        }\n      },\n      percentageRange: {\n        'ui:widget': 'range',\n        'ui:options': {\n          step: 5\n        }\n      }\n    },\n    formData: {\n      basicRange: 50,\n      temperatureRange: 20,\n      priceRange: 500,\n      percentageRange: 75\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Current Values</h4>\n            <ul style={{\n        fontSize: '12px',\n        margin: 0,\n        paddingLeft: '20px'\n      }}>\n              <li>Basic Range: {formData.basicRange}</li>\n              <li>Temperature: {formData.temperatureRange}°C</li>\n              <li>Price: ${formData.priceRange}</li>\n              <li>Percentage: {formData.percentageRange}%</li>\n            </ul>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...RangeWidget.parameters?.docs?.source}}},RadioWidget.parameters={...RadioWidget.parameters,docs:{...RadioWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        favoriteColor: {\n          type: 'string',\n          title: 'Favorite Color',\n          oneOf: [{\n            \"const\": \"neutral\",\n            \"title\": \"Neutral\",\n            \"color\": \"#939393\"\n          }, {\n            \"const\": \"yellow\",\n            \"title\": \"Yellow\",\n            \"color\": \"#B17D1A\"\n          }, {\n            \"const\": \"purple\",\n            \"title\": \"Purple\",\n            \"color\": \"#8A77E3\"\n          }],\n          description: 'Choose your favorite color'\n        },\n        priority: {\n          type: 'string',\n          title: 'Priority Level',\n          enum: ['low', 'medium', 'high', 'urgent'],\n          enumNames: ['Low Priority', 'Medium Priority', 'High Priority', 'Urgent']\n        },\n        tab: {\n          type: 'string',\n          title: 'Tab',\n          enum: ['tab1', 'tab2', 'tab3'],\n          enumNames: ['Tab 1', 'Tab 2', 'Tab 3']\n        },\n        size: {\n          type: 'string',\n          title: 'T-Shirt Size',\n          enum: ['xs', 's', 'm', 'l', 'xl', 'xxl'],\n          enumNames: ['Extra Small', 'Small', 'Medium', 'Large', 'Extra Large', 'XXL'],\n          description: 'Select your size'\n        }\n      }\n    },\n    uiSchema: {\n      \"favoriteColor\": {\n        \"ui:widget\": \"radio\",\n        \"ui:inline\": true\n      },\n      \"priority\": {\n        \"ui:widget\": \"radio\",\n        \"ui:inline\": true\n      },\n      \"tab\": {\n        \"ui:widget\": \"radio\",\n        \"ui:inline\": true,\n        \"ui:tab\": true\n      },\n      \"size\": {\n        \"ui:widget\": \"radio\"\n      }\n    },\n    formData: {\n      favoriteColor: 'blue',\n      priority: 'medium',\n      tab: 'tab1',\n      size: 'm'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Selected Values</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...RadioWidget.parameters?.docs?.source}}},SelectWidget.parameters={...SelectWidget.parameters,docs:{...SelectWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        country: {\n          type: 'string',\n          title: 'Country',\n          enum: ['us', 'ca', 'uk', 'de', 'fr', 'jp', 'au'],\n          enumNames: ['United States', 'Canada', 'United Kingdom', 'Germany', 'France', 'Japan', 'Australia'],\n          description: 'Select your country'\n        },\n        language: {\n          type: 'string',\n          title: 'Programming Language',\n          enum: ['javascript', 'typescript', 'python', 'java', 'csharp', 'go', 'rust'],\n          enumNames: ['JavaScript', 'TypeScript', 'Python', 'Java', 'C#', 'Go', 'Rust']\n        },\n        multipleLanguages: {\n          type: 'array',\n          title: 'Multiple Languages',\n          items: {\n            type: 'string',\n            enum: ['javascript', 'typescript', 'python', 'java', 'csharp', 'go', 'rust'],\n            enumNames: ['JavaScript', 'TypeScript', 'Python', 'Java', 'C#', 'Go', 'Rust']\n          },\n          uniqueItems: true,\n          description: 'Select multiple programming languages'\n        }\n      }\n    },\n    uiSchema: {\n      country: {\n        'ui:placeholder': 'Choose a country...'\n      },\n      language: {\n        'ui:placeholder': 'Select a language...'\n      },\n      multipleLanguages: {\n        'ui:widget': 'select',\n        'ui:placeholder': 'Select languages...'\n      }\n    },\n    formData: {\n      country: 'us',\n      language: 'typescript',\n      multipleLanguages: ['javascript', 'typescript']\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Selected Values</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...SelectWidget.parameters?.docs?.source}}},CheckboxWidget.parameters={...CheckboxWidget.parameters,docs:{...CheckboxWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        agreeToTerms: {\n          type: 'boolean',\n          title: 'I agree to the terms and conditions',\n          description: 'You must agree to continue'\n        },\n        enableNotifications: {\n          type: 'boolean',\n          title: 'Enable push notifications',\n          default: true\n        },\n        subscribeNewsletter: {\n          type: 'boolean',\n          title: 'Subscribe to newsletter',\n          description: 'Receive weekly updates via email'\n        },\n        features: {\n          type: 'array',\n          title: 'Enabled Features',\n          items: {\n            type: 'string',\n            enum: ['feature1', 'feature2', 'feature3', 'feature4']\n          },\n          uniqueItems: true,\n          description: 'Select which features to enable'\n        },\n        preferences: {\n          type: 'object',\n          title: 'User Preferences',\n          properties: {\n            darkMode: {\n              type: 'boolean',\n              title: 'Dark Mode',\n              default: false\n            },\n            autoSave: {\n              type: 'boolean',\n              title: 'Auto Save',\n              default: true\n            },\n            showTips: {\n              type: 'boolean',\n              title: 'Show Tips',\n              default: true\n            }\n          }\n        }\n      }\n    },\n    uiSchema: {\n      features: {\n        'ui:widget': 'checkboxes',\n        'ui:options': {\n          enumOptions: [{\n            value: 'feature1',\n            label: 'Advanced Analytics'\n          }, {\n            value: 'feature2',\n            label: 'Real-time Sync'\n          }, {\n            value: 'feature3',\n            label: 'Custom Themes'\n          }, {\n            value: 'feature4',\n            label: 'API Access'\n          }]\n        }\n      }\n    },\n    formData: {\n      enableNotifications: true,\n      features: ['feature1', 'feature2'],\n      preferences: {\n        darkMode: false,\n        autoSave: true,\n        showTips: true\n      }\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Checkbox States</h4>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              <p>Terms Agreed: {formData.agreeToTerms ? '✅' : '❌'}</p>\n              <p>Notifications: {formData.enableNotifications ? '✅' : '❌'}</p>\n              <p>Newsletter: {formData.subscribeNewsletter ? '✅' : '❌'}</p>\n              <p>Features: {formData.features?.length || 0} selected</p>\n              <p>Dark Mode: {formData.preferences?.darkMode ? '✅' : '❌'}</p>\n            </div>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...CheckboxWidget.parameters?.docs?.source}}},TextareaWidget.parameters={...TextareaWidget.parameters,docs:{...TextareaWidget.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        description: {\n          type: 'string',\n          title: 'Product Description',\n          description: 'Enter a detailed description of the product'\n        },\n        feedback: {\n          type: 'string',\n          title: 'Feedback',\n          description: 'Share your thoughts and suggestions'\n        },\n        code: {\n          type: 'string',\n          title: 'Code Snippet',\n          description: 'Paste your code here'\n        },\n        notes: {\n          type: 'string',\n          title: 'Additional Notes',\n          description: 'Any additional information'\n        }\n      }\n    },\n    uiSchema: {\n      description: {\n        'ui:widget': 'textarea',\n        'ui:options': {\n          rows: 4,\n          placeholder: 'Enter product description...'\n        }\n      },\n      feedback: {\n        'ui:widget': 'textarea',\n        'ui:options': {\n          rows: 3,\n          placeholder: 'We value your feedback...'\n        }\n      },\n      code: {\n        'ui:widget': 'textarea',\n        'ui:options': {\n          rows: 6,\n          placeholder: 'function example() {\\n  // Your code here\\n}'\n        }\n      },\n      notes: {\n        'ui:widget': 'textarea',\n        'ui:options': {\n          rows: 2,\n          placeholder: 'Optional notes...'\n        }\n      }\n    },\n    formData: {\n      description: 'This is a high-quality product designed for professionals.',\n      code: 'function greet(name) {\\n  return `Hello, ${name}!`;\\n}'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Text Statistics</h4>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              <p>Description: {formData.description?.length || 0} characters</p>\n              <p>Feedback: {formData.feedback?.length || 0} characters</p>\n              <p>Code: {formData.code?.length || 0} characters</p>\n              <p>Notes: {formData.notes?.length || 0} characters</p>\n            </div>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...TextareaWidget.parameters?.docs?.source}}}}}]);