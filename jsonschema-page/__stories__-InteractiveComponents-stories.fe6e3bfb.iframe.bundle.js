"use strict";(self.webpackChunk_ringcentral_integration_jsonschema_page=self.webpackChunk_ringcentral_integration_jsonschema_page||[]).push([[729],{"./src/__stories__/InteractiveComponents.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicListField:function(){return BasicListField},ButtonFields:function(){return ButtonFields},CardListField:function(){return CardListField},ListWithMetaField:function(){return ListWithMetaField},NavigationListField:function(){return NavigationListField},SearchAndFilterFields:function(){return SearchAndFilterFields},__namedExportsOrder:function(){return __namedExportsOrder}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@ringcentral/juno/es6/foundation/theme/ThemeProvider.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.tsx");const StoryLayout=({args:args,children:children,resultComponent:resultComponent})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"📋 JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),resultComponent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:resultComponent})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:children})})})]}),meta={title:"JSONSchemaPage/Interactive Components",component:_index__WEBPACK_IMPORTED_MODULE_2__.v,parameters:{layout:"fullscreen",docs:{description:{component:"Interactive components for user actions - Buttons, Selection Lists, Search fields, and other clickable elements"}}},tags:["autodocs"]};__webpack_exports__.default=meta;const ButtonFields={args:{schema:{type:"object",properties:{primaryButton:{type:"string",title:"Primary Action",description:"Standard primary button"},secondaryButton:{type:"string",title:"Secondary Action",description:"Outlined secondary button"},dangerButton:{type:"string",title:"Delete Item",description:"Danger action button"},textButton:{type:"string",title:"Text Button",description:"Simple text button"},fullWidthButton:{type:"string",title:"Full Width Button",description:"Button that spans full width"},plainButton:{type:"string",title:"Plain Button",description:"Plain style button"}}},uiSchema:{primaryButton:{"ui:field":"button","ui:variant":"contained","ui:color":"primary"},secondaryButton:{"ui:field":"button","ui:variant":"outlined","ui:color":"secondary"},dangerButton:{"ui:field":"button","ui:variant":"contained","ui:color":"danger.b03"},textButton:{"ui:field":"button","ui:variant":"text"},fullWidthButton:{"ui:field":"button","ui:variant":"contained","ui:color":"success","ui:fullWidth":!0},plainButton:{"ui:field":"button","ui:variant":"plain"}},formData:{}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[buttonClicks,setButtonClicks]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Button Interactions"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Primary clicks: ",buttonClicks.primaryButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Secondary clicks: ",buttonClicks.secondaryButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Danger clicks: ",buttonClicks.dangerButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Text clicks: ",buttonClicks.textButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Full Width clicks: ",buttonClicks.fullWidthButton||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Plain clicks: ",buttonClicks.plainButton||0]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData,onButtonClick:buttonId=>{setButtonClicks(prev=>({...prev,[buttonId]:(prev[buttonId]||0)+1}))}})})}},SearchAndFilterFields={args:{schema:{type:"object",properties:{globalSearch:{type:"string",title:"Global Search",description:"Search across all data"},filterSearch:{type:"string",title:"Filter Search",description:"Filter with autocomplete"},categoryFilter:{type:"string",title:"Category Filter",description:"Filter by category"},advancedSearch:{type:"string",title:"Advanced Search",description:"Search with advanced options"},searchResults:{type:"null",title:"Search Results",description:"Display search results dynamically"},resultCount:{type:"integer",title:"Result Count",description:"Number of results found",default:0}}},uiSchema:{globalSearch:{"ui:field":"search","ui:options":{placeholder:"Search everything...",showSearchIcon:!0,onSearch:(query,formData,setFormData)=>{const mockResults=query?Math.floor(50*Math.random())+1:0;setFormData(prev=>({...prev,resultCount:mockResults})),console.log(`Global search for: ${query}, found ${mockResults} results`)}}},filterSearch:{"ui:field":"search","ui:options":{placeholder:"Type to filter...",suggestions:["JavaScript","TypeScript","React","Vue","Angular","Node.js","Python","Java","C++","Go"],onSearch:query=>{console.log("Filter search:",query)}}},categoryFilter:{"ui:field":"search","ui:options":{placeholder:"Select category...",suggestions:["Technology","Design","Marketing","Sales","Support","Development","Testing","DevOps","Management"],variant:"filter",onSearch:query=>{console.log("Category filter:",query)}}},advancedSearch:{"ui:field":"search","ui:options":{placeholder:"Advanced search with operators...",helpText:"Use quotes for exact match, + for required terms, - for excluded terms",onSearch:query=>{console.log("Advanced search:",query),alert(`Advanced search: ${query}`)}}},searchResults:{"ui:field":"typography","ui:options":{variant:"body1",text:formData=>formData.resultCount>0?`Found ${formData.resultCount} results for your search.`:"No search performed yet.",style:{fontStyle:"italic",color:"#666",padding:"10px",backgroundColor:"#f0f0f0",borderRadius:"4px"}}}},formData:{globalSearch:"",filterSearch:"",categoryFilter:"",advancedSearch:"",resultCount:0}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[searchHistory,setSearchHistory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),enhancedArgs={...args,uiSchema:{...args.uiSchema,globalSearch:{...args.uiSchema.globalSearch,"ui:options":{...args.uiSchema.globalSearch["ui:options"],onSearch:(query,currentFormData,setCurrentFormData)=>{const mockResults=query?Math.floor(50*Math.random())+1:0;setFormData(prev=>({...prev,resultCount:mockResults})),setSearchHistory(prev=>({...prev,global:[...prev.global||[],query].slice(-3)})),console.log(`Global search for: ${query}, found ${mockResults} results`)}}},filterSearch:{...args.uiSchema.filterSearch,"ui:options":{...args.uiSchema.filterSearch["ui:options"],onSearch:query=>{setSearchHistory(prev=>({...prev,filter:[...prev.filter||[],query].slice(-3)})),console.log("Filter search:",query)}}},categoryFilter:{...args.uiSchema.categoryFilter,"ui:options":{...args.uiSchema.categoryFilter["ui:options"],onSearch:query=>{setSearchHistory(prev=>({...prev,category:[...prev.category||[],query].slice(-3)})),console.log("Category filter:",query)}}}}};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Search Analytics"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Global Searches: ",searchHistory.global?.length||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Filter Searches: ",searchHistory.filter?.length||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Category Filters: ",searchHistory.category?.length||0]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Current Results: ",formData.resultCount]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Search History"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{fontSize:"11px"},children:Object.entries(searchHistory).map(([type,queries])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginBottom:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("strong",{children:[type,":"]})," ",queries?.join(", ")||"None"]},type))})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...enhancedArgs,formData:formData,onFormDataChange:setFormData})})}},BasicListField={args:{schema:{type:"object",properties:{technology:{type:"string",title:"Choose Technology",description:"Select your preferred technology",oneOf:[{const:"javascript",title:"JavaScript",description:"The language of the web",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg"},{const:"typescript",title:"TypeScript",description:"JavaScript with type safety",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg"},{const:"react",title:"React",description:"A JavaScript library for building user interfaces",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg"},{const:"nodejs",title:"Node.js",description:"JavaScript runtime built on Chrome V8 engine",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg"}]}}},uiSchema:{technology:{"ui:field":"list","ui:showIconAsAvatar":!0,"ui:showSelected":!0}},formData:{technology:"react"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[selectionHistory,setSelectionHistory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Selection Activity"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Total Selections: ",selectionHistory.length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Current Selection: ",formData.technology||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Recent Selections:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{style:{margin:"5px 0",paddingLeft:"20px"},children:selectionHistory.slice(-3).map((entry,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:entry},index))||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"No selections yet"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:newData=>{if(newData.technology!==formData.technology&&newData.technology){const timestamp=(new Date).toLocaleTimeString();setSelectionHistory(prev=>[...prev,`${timestamp}: Selected ${newData.technology}`])}setFormData(newData)}})})}},ListWithMetaField={args:{schema:{type:"object",properties:{taskPriority:{type:"string",title:"Task Priority",description:"Select task priority level",oneOf:[{const:"urgent",title:"Urgent",description:"Needs immediate attention",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg",meta:"Due today"},{const:"high",title:"High Priority",description:"Important but not urgent",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg",meta:"Due this week"},{const:"medium",title:"Medium Priority",description:"Normal priority task",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg",meta:"Due next week"},{const:"low",title:"Low Priority",description:"Can be done when time permits",icon:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg",meta:"No rush"}]}}},uiSchema:{taskPriority:{"ui:field":"list","ui:showIconAsAvatar":!1,"ui:showSelected":!0}},formData:{taskPriority:"high"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Priority Analysis"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Selected Priority: ",formData.taskPriority||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Priority Level: ","urgent"===formData.taskPriority?"🔴 Critical":"high"===formData.taskPriority?"🟠 High":"medium"===formData.taskPriority?"🟡 Medium":"low"===formData.taskPriority?"🟢 Low":"Not set"]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},CardListField={args:{schema:{type:"object",properties:{projectCard:{type:"string",title:"Choose Project",description:"Select a project to work on",oneOf:[{const:"web-app",title:"Web Application",description:"Modern React-based web application with TypeScript and advanced features",backgroundColor:"#e3f2fd",authorName:"John Smith",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg",meta:"5 days left"},{const:"mobile-app",title:"Mobile App",description:"Cross-platform mobile application using React Native",backgroundColor:"#f3e5f5",authorName:"Alice Johnson",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg",meta:"2 weeks left"},{const:"api-service",title:"API Service",description:"RESTful API service built with Node.js and Express",backgroundColor:"#e8f5e8",authorName:"Bob Wilson",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg",meta:"1 week left"},{const:"dashboard",title:"Analytics Dashboard",description:"Data visualization dashboard with real-time updates and charts",backgroundColor:"#fff3e0",authorName:"Carol Davis",authorAvatar:"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg",meta:"3 days left"}]}}},uiSchema:{projectCard:{"ui:field":"list","ui:itemType":"card","ui:itemWidth":"48%","ui:showSelected":!1}},formData:{projectCard:"web-app"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Project Stats"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Selected Project: ",formData.projectCard||"None"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Project Status: ","web-app"===formData.projectCard?"🚀 In Development":"mobile-app"===formData.projectCard?"📱 Planning":"api-service"===formData.projectCard?"🔧 Testing":"dashboard"===formData.projectCard?"📊 Design Phase":"Not selected"]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData})})}},NavigationListField={args:{schema:{type:"object",properties:{navigationMenu:{type:"string",title:"Navigation Menu",description:"Select a page to navigate to",oneOf:[{const:"dashboard",title:"Dashboard",description:"Overview of your account and recent activity"},{const:"projects",title:"Projects",description:"Manage your projects and tasks"},{const:"team",title:"Team",description:"View team members and collaboration tools"},{const:"settings",title:"Settings",description:"Configure your account preferences"},{const:"help",title:"Help & Support",description:"Get help and contact support"}]}}},uiSchema:{navigationMenu:{"ui:field":"list","ui:navigation":!0,"ui:showIconAsAvatar":!1,"ui:showSelected":!1}},formData:{navigationMenu:""}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{}),[navigationHistory,setNavigationHistory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StoryLayout,{args:args,resultComponent:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"📊 Navigation Activity"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontSize:"12px",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Current Page: ",formData.navigationMenu||"Home"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Total Navigations: ",navigationHistory.length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Navigation History:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{style:{margin:"5px 0",paddingLeft:"20px"},children:navigationHistory.slice(-3).map((entry,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:entry},index))||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"No navigation yet"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"15px 0 10px 0",color:"#555"},children:"📝 Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:newData=>{if(newData.navigationMenu!==formData.navigationMenu&&newData.navigationMenu){const timestamp=(new Date).toLocaleTimeString();setNavigationHistory(prev=>[...prev,`${timestamp}: Navigated to ${newData.navigationMenu}`])}setFormData(newData)}})})}},__namedExportsOrder=["ButtonFields","SearchAndFilterFields","BasicListField","ListWithMetaField","CardListField","NavigationListField"];ButtonFields.parameters={...ButtonFields.parameters,docs:{...ButtonFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        primaryButton: {\n          type: 'string',\n          title: 'Primary Action',\n          description: 'Standard primary button'\n        },\n        secondaryButton: {\n          type: 'string',\n          title: 'Secondary Action',\n          description: 'Outlined secondary button'\n        },\n        dangerButton: {\n          type: 'string',\n          title: 'Delete Item',\n          description: 'Danger action button'\n        },\n        textButton: {\n          type: 'string',\n          title: 'Text Button',\n          description: 'Simple text button'\n        },\n        fullWidthButton: {\n          type: 'string',\n          title: 'Full Width Button',\n          description: 'Button that spans full width'\n        },\n        plainButton: {\n          type: 'string',\n          title: 'Plain Button',\n          description: 'Plain style button'\n        }\n      }\n    },\n    uiSchema: {\n      primaryButton: {\n        'ui:field': 'button',\n        'ui:variant': 'contained',\n        'ui:color': 'primary'\n      },\n      secondaryButton: {\n        'ui:field': 'button',\n        'ui:variant': 'outlined',\n        'ui:color': 'secondary'\n      },\n      dangerButton: {\n        'ui:field': 'button',\n        'ui:variant': 'contained',\n        'ui:color': 'danger.b03'\n      },\n      textButton: {\n        'ui:field': 'button',\n        'ui:variant': 'text'\n      },\n      fullWidthButton: {\n        'ui:field': 'button',\n        'ui:variant': 'contained',\n        'ui:color': 'success',\n        'ui:fullWidth': true\n      },\n      plainButton: {\n        'ui:field': 'button',\n        'ui:variant': 'plain'\n      }\n    },\n    formData: {}\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [buttonClicks, setButtonClicks] = useState<{\n      primaryButton?: number;\n      secondaryButton?: number;\n      dangerButton?: number;\n      textButton?: number;\n      fullWidthButton?: number;\n      plainButton?: number;\n    }>({});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Button Interactions</h4>\n            <div style={{\n        fontSize: '12px'\n      }}>\n              <p>Primary clicks: {buttonClicks.primaryButton || 0}</p>\n              <p>Secondary clicks: {buttonClicks.secondaryButton || 0}</p>\n              <p>Danger clicks: {buttonClicks.dangerButton || 0}</p>\n              <p>Text clicks: {buttonClicks.textButton || 0}</p>\n              <p>Full Width clicks: {buttonClicks.fullWidthButton || 0}</p>\n              <p>Plain clicks: {buttonClicks.plainButton || 0}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} onButtonClick={(buttonId: string) => {\n        setButtonClicks(prev => ({\n          ...prev,\n          [buttonId]: (prev[buttonId as keyof typeof prev] || 0) + 1\n        }));\n      }} />\n      </StoryLayout>;\n  }\n}",...ButtonFields.parameters?.docs?.source}}},SearchAndFilterFields.parameters={...SearchAndFilterFields.parameters,docs:{...SearchAndFilterFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        globalSearch: {\n          type: 'string',\n          title: 'Global Search',\n          description: 'Search across all data'\n        },\n        filterSearch: {\n          type: 'string',\n          title: 'Filter Search',\n          description: 'Filter with autocomplete'\n        },\n        categoryFilter: {\n          type: 'string',\n          title: 'Category Filter',\n          description: 'Filter by category'\n        },\n        advancedSearch: {\n          type: 'string',\n          title: 'Advanced Search',\n          description: 'Search with advanced options'\n        },\n        searchResults: {\n          type: 'null',\n          title: 'Search Results',\n          description: 'Display search results dynamically'\n        },\n        resultCount: {\n          type: 'integer',\n          title: 'Result Count',\n          description: 'Number of results found',\n          default: 0\n        }\n      }\n    },\n    uiSchema: {\n      globalSearch: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Search everything...',\n          showSearchIcon: true,\n          onSearch: (query: string, formData: any, setFormData: any) => {\n            const mockResults = query ? Math.floor(Math.random() * 50) + 1 : 0;\n            setFormData((prev: any) => ({\n              ...prev,\n              resultCount: mockResults\n            }));\n            console.log(`Global search for: ${query}, found ${mockResults} results`);\n          }\n        }\n      },\n      filterSearch: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Type to filter...',\n          suggestions: ['JavaScript', 'TypeScript', 'React', 'Vue', 'Angular', 'Node.js', 'Python', 'Java', 'C++', 'Go'],\n          onSearch: (query: string) => {\n            console.log('Filter search:', query);\n          }\n        }\n      },\n      categoryFilter: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Select category...',\n          suggestions: ['Technology', 'Design', 'Marketing', 'Sales', 'Support', 'Development', 'Testing', 'DevOps', 'Management'],\n          variant: 'filter',\n          onSearch: (query: string) => {\n            console.log('Category filter:', query);\n          }\n        }\n      },\n      advancedSearch: {\n        'ui:field': 'search',\n        'ui:options': {\n          placeholder: 'Advanced search with operators...',\n          helpText: 'Use quotes for exact match, + for required terms, - for excluded terms',\n          onSearch: (query: string) => {\n            console.log('Advanced search:', query);\n            alert(`Advanced search: ${query}`);\n          }\n        }\n      },\n      searchResults: {\n        'ui:field': 'typography',\n        'ui:options': {\n          variant: 'body1',\n          text: (formData: any) => {\n            if (formData.resultCount > 0) {\n              return `Found ${formData.resultCount} results for your search.`;\n            }\n            return 'No search performed yet.';\n          },\n          style: {\n            fontStyle: 'italic',\n            color: '#666',\n            padding: '10px',\n            backgroundColor: '#f0f0f0',\n            borderRadius: '4px'\n          }\n        }\n      }\n    },\n    formData: {\n      globalSearch: '',\n      filterSearch: '',\n      categoryFilter: '',\n      advancedSearch: '',\n      resultCount: 0\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [searchHistory, setSearchHistory] = useState<{\n      global?: string[];\n      filter?: string[];\n      category?: string[];\n      [key: string]: string[] | undefined;\n    }>({});\n\n    // Enhanced search handlers\n    const enhancedArgs = {\n      ...args,\n      uiSchema: {\n        ...args.uiSchema,\n        globalSearch: {\n          ...(args.uiSchema as any).globalSearch,\n          'ui:options': {\n            ...(args.uiSchema as any).globalSearch['ui:options'],\n            onSearch: (query: string, currentFormData: any, setCurrentFormData: any) => {\n              const mockResults = query ? Math.floor(Math.random() * 50) + 1 : 0;\n              setFormData((prev: any) => ({\n                ...prev,\n                resultCount: mockResults\n              }));\n              setSearchHistory(prev => ({\n                ...prev,\n                global: [...(prev.global || []), query].slice(-3)\n              }));\n              console.log(`Global search for: ${query}, found ${mockResults} results`);\n            }\n          }\n        },\n        filterSearch: {\n          ...(args.uiSchema as any).filterSearch,\n          'ui:options': {\n            ...(args.uiSchema as any).filterSearch['ui:options'],\n            onSearch: (query: string) => {\n              setSearchHistory(prev => ({\n                ...prev,\n                filter: [...(prev.filter || []), query].slice(-3)\n              }));\n              console.log('Filter search:', query);\n            }\n          }\n        },\n        categoryFilter: {\n          ...(args.uiSchema as any).categoryFilter,\n          'ui:options': {\n            ...(args.uiSchema as any).categoryFilter['ui:options'],\n            onSearch: (query: string) => {\n              setSearchHistory(prev => ({\n                ...prev,\n                category: [...(prev.category || []), query].slice(-3)\n              }));\n              console.log('Category filter:', query);\n            }\n          }\n        }\n      }\n    };\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Search Analytics</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Global Searches: {searchHistory.global?.length || 0}</p>\n              <p>Filter Searches: {searchHistory.filter?.length || 0}</p>\n              <p>Category Filters: {searchHistory.category?.length || 0}</p>\n              <p>Current Results: {formData.resultCount}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Search History</h4>\n            <div style={{\n        fontSize: '11px'\n      }}>\n              {Object.entries(searchHistory).map(([type, queries]) => <div key={type} style={{\n          marginBottom: '8px'\n        }}>\n                  <strong>{type}:</strong> {queries?.join(', ') || 'None'}\n                </div>)}\n            </div>\n          </>}>\n        <JSONSchemaPage {...enhancedArgs} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...SearchAndFilterFields.parameters?.docs?.source}}},BasicListField.parameters={...BasicListField.parameters,docs:{...BasicListField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        technology: {\n          type: 'string',\n          title: 'Choose Technology',\n          description: 'Select your preferred technology',\n          oneOf: [{\n            const: 'javascript',\n            title: 'JavaScript',\n            description: 'The language of the web',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg'\n          }, {\n            const: 'typescript',\n            title: 'TypeScript',\n            description: 'JavaScript with type safety',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg'\n          }, {\n            const: 'react',\n            title: 'React',\n            description: 'A JavaScript library for building user interfaces',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg'\n          }, {\n            const: 'nodejs',\n            title: 'Node.js',\n            description: 'JavaScript runtime built on Chrome V8 engine',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      technology: {\n        'ui:field': 'list',\n        'ui:showIconAsAvatar': true,\n        'ui:showSelected': true\n      }\n    },\n    formData: {\n      technology: 'react'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [selectionHistory, setSelectionHistory] = useState<string[]>([]);\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Selection Activity</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Total Selections: {selectionHistory.length}</p>\n              <p>Current Selection: {formData.technology || 'None'}</p>\n              <p>Recent Selections:</p>\n              <ul style={{\n          margin: '5px 0',\n          paddingLeft: '20px'\n        }}>\n                {selectionHistory.slice(-3).map((entry, index) => <li key={index}>{entry}</li>) || <li>No selections yet</li>}\n              </ul>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={newData => {\n        if (newData.technology !== formData.technology && newData.technology) {\n          const timestamp = new Date().toLocaleTimeString();\n          setSelectionHistory(prev => [...prev, `${timestamp}: Selected ${newData.technology}`]);\n        }\n        setFormData(newData);\n      }} />\n      </StoryLayout>;\n  }\n}",...BasicListField.parameters?.docs?.source}}},ListWithMetaField.parameters={...ListWithMetaField.parameters,docs:{...ListWithMetaField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        taskPriority: {\n          type: 'string',\n          title: 'Task Priority',\n          description: 'Select task priority level',\n          oneOf: [{\n            const: 'urgent',\n            title: 'Urgent',\n            description: 'Needs immediate attention',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg',\n            meta: 'Due today'\n          }, {\n            const: 'high',\n            title: 'High Priority',\n            description: 'Important but not urgent',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg',\n            meta: 'Due this week'\n          }, {\n            const: 'medium',\n            title: 'Medium Priority',\n            description: 'Normal priority task',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg',\n            meta: 'Due next week'\n          }, {\n            const: 'low',\n            title: 'Low Priority',\n            description: 'Can be done when time permits',\n            icon: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n            meta: 'No rush'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      taskPriority: {\n        'ui:field': 'list',\n        'ui:showIconAsAvatar': false,\n        'ui:showSelected': true\n      }\n    },\n    formData: {\n      taskPriority: 'high'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Priority Analysis</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Selected Priority: {formData.taskPriority || 'None'}</p>\n              <p>Priority Level: {formData.taskPriority === 'urgent' ? '🔴 Critical' : formData.taskPriority === 'high' ? '🟠 High' : formData.taskPriority === 'medium' ? '🟡 Medium' : formData.taskPriority === 'low' ? '🟢 Low' : 'Not set'}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...ListWithMetaField.parameters?.docs?.source}}},CardListField.parameters={...CardListField.parameters,docs:{...CardListField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        projectCard: {\n          type: 'string',\n          title: 'Choose Project',\n          description: 'Select a project to work on',\n          oneOf: [{\n            const: 'web-app',\n            title: 'Web Application',\n            description: 'Modern React-based web application with TypeScript and advanced features',\n            backgroundColor: '#e3f2fd',\n            authorName: 'John Smith',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n            meta: '5 days left'\n          }, {\n            const: 'mobile-app',\n            title: 'Mobile App',\n            description: 'Cross-platform mobile application using React Native',\n            backgroundColor: '#f3e5f5',\n            authorName: 'Alice Johnson',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg',\n            meta: '2 weeks left'\n          }, {\n            const: 'api-service',\n            title: 'API Service',\n            description: 'RESTful API service built with Node.js and Express',\n            backgroundColor: '#e8f5e8',\n            authorName: 'Bob Wilson',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg',\n            meta: '1 week left'\n          }, {\n            const: 'dashboard',\n            title: 'Analytics Dashboard',\n            description: 'Data visualization dashboard with real-time updates and charts',\n            backgroundColor: '#fff3e0',\n            authorName: 'Carol Davis',\n            authorAvatar: 'https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg',\n            meta: '3 days left'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      projectCard: {\n        'ui:field': 'list',\n        'ui:itemType': 'card',\n        'ui:itemWidth': '48%',\n        'ui:showSelected': false\n      }\n    },\n    formData: {\n      projectCard: 'web-app'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Project Stats</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Selected Project: {formData.projectCard || 'None'}</p>\n              <p>Project Status: {formData.projectCard === 'web-app' ? '🚀 In Development' : formData.projectCard === 'mobile-app' ? '📱 Planning' : formData.projectCard === 'api-service' ? '🔧 Testing' : formData.projectCard === 'dashboard' ? '📊 Design Phase' : 'Not selected'}</p>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} />\n      </StoryLayout>;\n  }\n}",...CardListField.parameters?.docs?.source}}},NavigationListField.parameters={...NavigationListField.parameters,docs:{...NavigationListField.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        navigationMenu: {\n          type: 'string',\n          title: 'Navigation Menu',\n          description: 'Select a page to navigate to',\n          oneOf: [{\n            const: 'dashboard',\n            title: 'Dashboard',\n            description: 'Overview of your account and recent activity'\n          }, {\n            const: 'projects',\n            title: 'Projects',\n            description: 'Manage your projects and tasks'\n          }, {\n            const: 'team',\n            title: 'Team',\n            description: 'View team members and collaboration tools'\n          }, {\n            const: 'settings',\n            title: 'Settings',\n            description: 'Configure your account preferences'\n          }, {\n            const: 'help',\n            title: 'Help & Support',\n            description: 'Get help and contact support'\n          }]\n        }\n      }\n    },\n    uiSchema: {\n      navigationMenu: {\n        'ui:field': 'list',\n        'ui:navigation': true,\n        'ui:showIconAsAvatar': false,\n        'ui:showSelected': false\n      }\n    },\n    formData: {\n      navigationMenu: ''\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    const [navigationHistory, setNavigationHistory] = useState<string[]>([]);\n    return <StoryLayout args={args} resultComponent={<>\n            <h4 style={{\n        margin: '0 0 10px 0',\n        color: '#555'\n      }}>📊 Navigation Activity</h4>\n            <div style={{\n        fontSize: '12px',\n        marginBottom: '15px'\n      }}>\n              <p>Current Page: {formData.navigationMenu || 'Home'}</p>\n              <p>Total Navigations: {navigationHistory.length}</p>\n              <p>Navigation History:</p>\n              <ul style={{\n          margin: '5px 0',\n          paddingLeft: '20px'\n        }}>\n                {navigationHistory.slice(-3).map((entry, index) => <li key={index}>{entry}</li>) || <li>No navigation yet</li>}\n              </ul>\n            </div>\n            <h4 style={{\n        margin: '15px 0 10px 0',\n        color: '#555'\n      }}>📝 Form Data</h4>\n            <pre style={{\n        fontSize: '11px',\n        overflow: 'auto',\n        maxHeight: '200px',\n        margin: 0,\n        background: 'white',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ddd'\n      }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </>}>\n        <JSONSchemaPage {...args} formData={formData} onFormDataChange={newData => {\n        if (newData.navigationMenu !== formData.navigationMenu && newData.navigationMenu) {\n          const timestamp = new Date().toLocaleTimeString();\n          setNavigationHistory(prev => [...prev, `${timestamp}: Navigated to ${newData.navigationMenu}`]);\n        }\n        setFormData(newData);\n      }} />\n      </StoryLayout>;\n  }\n}",...NavigationListField.parameters?.docs?.source}}}}}]);