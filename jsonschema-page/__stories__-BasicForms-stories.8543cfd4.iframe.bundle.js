"use strict";(self.webpackChunk_ringcentral_integration_jsonschema_page=self.webpackChunk_ringcentral_integration_jsonschema_page||[]).push([[580],{"./src/__stories__/BasicForms.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ArrayFields:function(){return ArrayFields},ConditionalFields:function(){return ConditionalFields},ContactForm:function(){return ContactForm},CustomValidation:function(){return CustomValidation},__namedExportsOrder:function(){return __namedExportsOrder}});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@ringcentral/juno/es6/foundation/theme/ThemeProvider.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.tsx");const meta={title:"JSONSchemaPage/Complete Form Examples",component:_index__WEBPACK_IMPORTED_MODULE_2__.v,parameters:{layout:"fullscreen",docs:{description:{component:"Complete form examples showing real-world use cases - Contact forms, Multi-step workflows, Validation patterns, and advanced form features"}}},tags:["autodocs"],argTypes:{schema:{description:"JSON Schema that defines the form structure",control:{type:"object"}},uiSchema:{description:"UI Schema that defines how the form should be rendered",control:{type:"object"}},formData:{description:"Current form data values",control:{type:"object"}},hiddenSubmitButton:{description:"Whether to hide the default submit button",control:{type:"boolean"}}}};__webpack_exports__.default=meta;const ContactForm={args:{schema:{type:"object",required:["firstName","lastName","email"],properties:{firstName:{type:"string",title:"First Name",description:"Enter your first name"},lastName:{type:"string",title:"Last Name",description:"Enter your last name"},email:{type:"string",format:"email",title:"Email Address",description:"Enter a valid email address"},phone:{type:"string",title:"Phone Number",description:"Enter your phone number (optional)"},age:{type:"integer",title:"Age",minimum:0,maximum:120}}},uiSchema:{firstName:{"ui:placeholder":"John"},lastName:{"ui:placeholder":"Doe"},email:{"ui:placeholder":"john.doe@example.com"},phone:{"ui:placeholder":"+1 (555) 123-4567"},age:{"ui:widget":"range"}},formData:{firstName:"John",lastName:"Doe",email:"john.doe@example.com"},hiddenSubmitButton:!1},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"ðŸ“‹ JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"ðŸ“Š Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData,onSubmit:data=>{console.log("Form submitted:",data.formData),alert("Form submitted! Check console for data.")}})})})})]})}},ConditionalFields={args:{schema:{type:"object",required:["name","userType"],properties:{name:{type:"string",title:"Full Name"},userType:{type:"string",title:"User Type",enum:["individual","business"],enumNames:["Individual","Business"]},email:{type:"string",format:"email",title:"Email Address"}},dependencies:{userType:{oneOf:[{properties:{userType:{enum:["individual"]},dateOfBirth:{type:"string",format:"date",title:"Date of Birth"},personalId:{type:"string",title:"Personal ID"}},required:["dateOfBirth"]},{properties:{userType:{enum:["business"]},companyName:{type:"string",title:"Company Name"},taxId:{type:"string",title:"Tax ID"},numberOfEmployees:{type:"integer",title:"Number of Employees",minimum:1}},required:["companyName","taxId"]}]}}},formData:{userType:"individual"}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"ðŸ“‹ JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"ðŸ“Š Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData,onSubmit:data=>{console.log("Registration data:",data.formData),alert("Registration submitted! Check console for data.")}})})})})]})}},ArrayFields={args:{schema:{type:"object",properties:{projectName:{type:"string",title:"Project Name"},teamMembers:{type:"array",title:"Team Members",description:"Add team members to the project",items:{type:"object",properties:{name:{type:"string",title:"Name"},role:{type:"string",title:"Role",enum:["developer","designer","manager","tester"],enumNames:["Developer","Designer","Manager","Tester"]},email:{type:"string",format:"email",title:"Email"},isLead:{type:"boolean",title:"Team Lead",default:!1}},required:["name","role","email"]}},tags:{type:"array",title:"Project Tags",description:"Add relevant tags for the project",items:{type:"string"},uniqueItems:!0}},required:["projectName"]},formData:{projectName:"Awesome Project",teamMembers:[{name:"John Doe",role:"developer",email:"john@example.com",isLead:!0}],tags:["react","typescript"]}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"ðŸ“‹ JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"ðŸ“Š Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData,onSubmit:data=>{console.log("Team data:",data.formData),alert("Team data submitted! Check console for data.")}})})})})]})}},CustomValidation={args:{schema:{type:"object",properties:{username:{type:"string",title:"Username",minLength:3,maxLength:20,pattern:"^[a-zA-Z0-9_]+$",description:"Username must be 3-20 characters, alphanumeric and underscores only"},password:{type:"string",title:"Password",minLength:8,description:"Password must be at least 8 characters long"},confirmPassword:{type:"string",title:"Confirm Password",description:"Re-enter your password"},agreeToTerms:{type:"boolean",title:"I agree to the terms and conditions",const:!0}},required:["username","password","confirmPassword","agreeToTerms"]},uiSchema:{password:{"ui:widget":"password"},confirmPassword:{"ui:widget":"password"}}},render:args=>{const[formData,setFormData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.formData||{});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",gap:"20px",maxWidth:"1400px",margin:"0 auto"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{flex:"0 0 45%",minWidth:"300px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f0f8ff",borderRadius:"8px",border:"1px solid #0066cc",marginBottom:"15px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#0066cc"},children:"ðŸ“‹ JSON Configuration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"400px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify({schema:args.schema,uiSchema:args.uiSchema,formData:args.formData},null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{padding:"15px",background:"#f5f5f5",borderRadius:"8px",border:"1px solid #ccc"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{style:{margin:"0 0 10px 0",color:"#555"},children:"ðŸ“Š Current Form Data"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{fontSize:"11px",overflow:"auto",maxHeight:"200px",margin:0,background:"white",padding:"10px",borderRadius:"4px",border:"1px solid #ddd"},children:JSON.stringify(formData,null,2)})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{flex:"1",minWidth:"300px"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ringcentral_juno__WEBPACK_IMPORTED_MODULE_3__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"20px",background:"white",borderRadius:"8px",border:"1px solid #e0e0e0",boxShadow:"0 2px 4px rgba(0,0,0,0.1)"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.v,{...args,formData:formData,onFormDataChange:setFormData,onSubmit:data=>{data.formData.password===data.formData.confirmPassword?(console.log("Account created:",data.formData),alert("Account created successfully!")):alert("Passwords do not match!")}})})})})]})}},__namedExportsOrder=["ContactForm","ConditionalFields","ArrayFields","CustomValidation"];ContactForm.parameters={...ContactForm.parameters,docs:{...ContactForm.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      required: ['firstName', 'lastName', 'email'],\n      properties: {\n        firstName: {\n          type: 'string',\n          title: 'First Name',\n          description: 'Enter your first name'\n        },\n        lastName: {\n          type: 'string',\n          title: 'Last Name',\n          description: 'Enter your last name'\n        },\n        email: {\n          type: 'string',\n          format: 'email',\n          title: 'Email Address',\n          description: 'Enter a valid email address'\n        },\n        phone: {\n          type: 'string',\n          title: 'Phone Number',\n          description: 'Enter your phone number (optional)'\n        },\n        age: {\n          type: 'integer',\n          title: 'Age',\n          minimum: 0,\n          maximum: 120\n        }\n      }\n    },\n    uiSchema: {\n      firstName: {\n        'ui:placeholder': 'John'\n      },\n      lastName: {\n        'ui:placeholder': 'Doe'\n      },\n      email: {\n        'ui:placeholder': 'john.doe@example.com'\n      },\n      phone: {\n        'ui:placeholder': '+1 (555) 123-4567'\n      },\n      age: {\n        'ui:widget': 'range'\n      }\n    },\n    formData: {\n      firstName: 'John',\n      lastName: 'Doe',\n      email: 'john.doe@example.com'\n    },\n    hiddenSubmitButton: false\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>ðŸ“‹ JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>ðŸ“Š Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} onSubmit={data => {\n              console.log('Form submitted:', data.formData);\n              alert('Form submitted! Check console for data.');\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...ContactForm.parameters?.docs?.source}}},ConditionalFields.parameters={...ConditionalFields.parameters,docs:{...ConditionalFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      required: ['name', 'userType'],\n      properties: {\n        name: {\n          type: 'string',\n          title: 'Full Name'\n        },\n        userType: {\n          type: 'string',\n          title: 'User Type',\n          enum: ['individual', 'business'],\n          enumNames: ['Individual', 'Business']\n        },\n        email: {\n          type: 'string',\n          format: 'email',\n          title: 'Email Address'\n        }\n      },\n      dependencies: {\n        userType: {\n          oneOf: [{\n            properties: {\n              userType: {\n                enum: ['individual']\n              },\n              dateOfBirth: {\n                type: 'string',\n                format: 'date',\n                title: 'Date of Birth'\n              },\n              personalId: {\n                type: 'string',\n                title: 'Personal ID'\n              }\n            },\n            required: ['dateOfBirth']\n          }, {\n            properties: {\n              userType: {\n                enum: ['business']\n              },\n              companyName: {\n                type: 'string',\n                title: 'Company Name'\n              },\n              taxId: {\n                type: 'string',\n                title: 'Tax ID'\n              },\n              numberOfEmployees: {\n                type: 'integer',\n                title: 'Number of Employees',\n                minimum: 1\n              }\n            },\n            required: ['companyName', 'taxId']\n          }]\n        }\n      }\n    },\n    formData: {\n      userType: 'individual'\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>ðŸ“‹ JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>ðŸ“Š Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} onSubmit={data => {\n              console.log('Registration data:', data.formData);\n              alert('Registration submitted! Check console for data.');\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...ConditionalFields.parameters?.docs?.source}}},ArrayFields.parameters={...ArrayFields.parameters,docs:{...ArrayFields.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        projectName: {\n          type: 'string',\n          title: 'Project Name'\n        },\n        teamMembers: {\n          type: 'array',\n          title: 'Team Members',\n          description: 'Add team members to the project',\n          items: {\n            type: 'object',\n            properties: {\n              name: {\n                type: 'string',\n                title: 'Name'\n              },\n              role: {\n                type: 'string',\n                title: 'Role',\n                enum: ['developer', 'designer', 'manager', 'tester'],\n                enumNames: ['Developer', 'Designer', 'Manager', 'Tester']\n              },\n              email: {\n                type: 'string',\n                format: 'email',\n                title: 'Email'\n              },\n              isLead: {\n                type: 'boolean',\n                title: 'Team Lead',\n                default: false\n              }\n            },\n            required: ['name', 'role', 'email']\n          }\n        },\n        tags: {\n          type: 'array',\n          title: 'Project Tags',\n          description: 'Add relevant tags for the project',\n          items: {\n            type: 'string'\n          },\n          uniqueItems: true\n        }\n      },\n      required: ['projectName']\n    },\n    formData: {\n      projectName: 'Awesome Project',\n      teamMembers: [{\n        name: 'John Doe',\n        role: 'developer',\n        email: 'john@example.com',\n        isLead: true\n      }],\n      tags: ['react', 'typescript']\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>ðŸ“‹ JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>ðŸ“Š Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} onSubmit={data => {\n              console.log('Team data:', data.formData);\n              alert('Team data submitted! Check console for data.');\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...ArrayFields.parameters?.docs?.source}}},CustomValidation.parameters={...CustomValidation.parameters,docs:{...CustomValidation.parameters?.docs,source:{originalSource:"{\n  args: {\n    schema: {\n      type: 'object',\n      properties: {\n        username: {\n          type: 'string',\n          title: 'Username',\n          minLength: 3,\n          maxLength: 20,\n          pattern: '^[a-zA-Z0-9_]+$',\n          description: 'Username must be 3-20 characters, alphanumeric and underscores only'\n        },\n        password: {\n          type: 'string',\n          title: 'Password',\n          minLength: 8,\n          description: 'Password must be at least 8 characters long'\n        },\n        confirmPassword: {\n          type: 'string',\n          title: 'Confirm Password',\n          description: 'Re-enter your password'\n        },\n        agreeToTerms: {\n          type: 'boolean',\n          title: 'I agree to the terms and conditions',\n          const: true\n        }\n      },\n      required: ['username', 'password', 'confirmPassword', 'agreeToTerms']\n    },\n    uiSchema: {\n      password: {\n        'ui:widget': 'password'\n      },\n      confirmPassword: {\n        'ui:widget': 'password'\n      }\n    }\n  },\n  render: args => {\n    const [formData, setFormData] = useState(args.formData || {});\n    return <div style={{\n      display: 'flex',\n      gap: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    }}>\n        {/* Left Panel - JSON Configuration */}\n        <div style={{\n        flex: '0 0 45%',\n        minWidth: '300px'\n      }}>\n          <div style={{\n          padding: '15px',\n          background: '#f0f8ff',\n          borderRadius: '8px',\n          border: '1px solid #0066cc',\n          marginBottom: '15px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#0066cc'\n          }}>ðŸ“‹ JSON Configuration</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '400px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify({\n              schema: args.schema,\n              uiSchema: args.uiSchema,\n              formData: args.formData\n            }, null, 2)}\n            </pre>\n          </div>\n          <div style={{\n          padding: '15px',\n          background: '#f5f5f5',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#555'\n          }}>ðŸ“Š Current Form Data</h4>\n            <pre style={{\n            fontSize: '11px',\n            overflow: 'auto',\n            maxHeight: '200px',\n            margin: 0,\n            background: 'white',\n            padding: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ddd'\n          }}>\n              {JSON.stringify(formData, null, 2)}\n            </pre>\n          </div>\n        </div>\n        \n        {/* Right Panel - Rendered Form */}\n        <div style={{\n        flex: '1',\n        minWidth: '300px'\n      }}>\n          <RcThemeProvider>\n            <div style={{\n            padding: '20px',\n            background: 'white',\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          }}>\n              <JSONSchemaPage {...args} formData={formData} onFormDataChange={setFormData} onSubmit={data => {\n              // Custom validation for password confirmation\n              if (data.formData.password !== data.formData.confirmPassword) {\n                alert('Passwords do not match!');\n                return;\n              }\n              console.log('Account created:', data.formData);\n              alert('Account created successfully!');\n            }} />\n            </div>\n          </RcThemeProvider>\n        </div>\n      </div>;\n  }\n}",...CustomValidation.parameters?.docs?.source}}}}}]);